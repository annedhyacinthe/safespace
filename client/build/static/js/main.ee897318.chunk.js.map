{"version":3,"sources":["contexts/userContext.js","components/Theme.js","components/Login.js","components/Landing.js","components/Navbar.js","components/AvatarGen.js","components/Register.js","components/Home.js","components/CommentList.js","components/WritePostForm.js","components/Update.js","components/Post.js","components/NewPostModal.js","components/NewsFeed.js","components/Communities.js","components/NewPost.js","components/Account.js","components/Edit.js","components/OtherUserAcc.js","components/Community.js","components/Message.js","components/Chat.js","components/CreateCommunity.js","App.js","index.js"],"names":["UserContext","createContext","UserProvider","children","useState","user","setUser","useEffect","document","cookie","fetch","then","res","status","json","Provider","value","colorPallet","Login","username","setUsername","password","setPassword","isSubmitted","setIsSubmitted","useContext","alert","setAlert","sendCredentials","a","data","method","headers","body","JSON","stringify","warn","Error","catch","err","console","log","warningText","window","setTimeout","style","display","justifyContent","marginTop","Card","width","border","Body","Title","textAlign","color","Subtitle","className","Container","fluid","Form","Alert","variant","Group","Input","type","label","onChange","e","target","onClean","cleaned","controlId","Button","onClick","preventDefault","to","redirectToFeed","Landing","setCommunities","fadeInLeft","useSpring","from","opacity","fadeInUp","id","req","list","getCommunities","Jumbotron","background","backgroundPosition","backgroundSize","height","borderRadius","padding","div","Text","NavBar","communities","loggedOut","setLoggedOut","Navbar","sticky","backgroundColor","expand","Brand","fontFamily","fontWeight","fontStyle","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","title","map","community","Item","key","name","AvatarGen","seed","setSeed","sprite","setSprite","marginBottom","Image","src","rounded","characters","max","length","randomString","i","Math","ceil","random","stringGenerator","Dropdown","options","choice","Register","email","setEmail","redirect","setRedirect","avatar","onSubmit","test","toLowerCase","validateInputs","registerUser","helper","Home","Loader","alignItems","indeterminate","active","CommentList","comments","complete","setComplete","user_id","response","users","getNames","Comment","Header","as","dividing","Avatar","Content","Author","Metadata","created_at","content","WritePostForm","props","setTitle","setBody","update","setUpdate","communityId","postId","newPostInit","setShow","maxLength","currentTitle","TextArea","currentBody","Update","show","createRef","text","Modal","onHide","animation","closeButton","setNewPost","Post","likes","setLikes","setComments","isCommentsShowing","setIsCommentsShowing","isLiked","setIsLiked","dateCreated","Date","userComment","setUserComment","getLikes","userResponse","setUserResponse","getUser","like","postLike","getComments","createComment","postComment","marginLeft","boxShadow","floated","icon","Menu","Meta","getMonth","getDate","getFullYear","getHours","getMinutes","Description","min","ideal","readMoreText","Extra","currentComment","labelPosition","primary","NewPostModal","fixed","size","circular","NewsFeed","setResponse","useParams","getPost","Communities","setCommunity","joined","setJoined","visited","setVisit","checkCommunities","t","splice","userId","Spinner","role","marginRight","index","display_name","headline","join","visit","location","useLocation","postAuthorId","community_id","isChanged","setIsChanged","postLikes","author","setAuthor","newAuthor","getAuthor","likePost","likeInit","newLikes","deletePost","commentInit","p","pathname","toLocaleString","extra","justifyContents","Label","basic","pointing","Icon","animated","visible","hidden","reply","secondary","Account","posts","setPosts","rawPosts","margin","Edit","class","OtherUser","getPosts","Community","moderators","setModerators","getModerators","getCommunity","Feed","Event","image","Tabs","defaultActiveKey","transition","Tab","eventKey","Array","isArray","description","List","moderator","Summary","Message","sentAt","isPrivate","message","Chat","setMessage","yourId","setYourId","chatLog","setChatLog","contact","setContact","onlineUsers","setOnlineUsers","isOnline","setIsOnline","newMessage","setNewMessage","socketRef","useRef","getTime","now","month","day","year","time","AM_PM","current","io","connect","on","oldMsgs","msgCount","receivedMessage","getElementById","chatBox","scrollTop","scrollHeight","panes","menuItem","render","socketId","overflow","OverlayTrigger","placement","overlay","Tooltip","Radio","toggle","emit","userRef","goOnline","fontSize","messageObject","sendMessage","CreateCommunity","communityName","displayName","values","setValues","errors","setErrors","completed","setCompleted","handleChange","newCommunityValues","handleSubmit","communityData","commRes","push","errorsArr","App","ThemeProvider","path","root","ReactDOM","StrictMode"],"mappings":"+NAEaA,EAAcC,wBAAc,IAE5BC,EAAe,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACpBC,mBAAS,MADW,mBACrCC,EADqC,KAC/BC,EAD+B,KAa5C,OAVAC,qBAAU,WACRC,SAASC,OACLC,MAAM,SACHC,MAAK,SAACC,GACL,OAAmB,MAAfA,EAAIC,OAAuBD,EAAIE,OAC5B,QAERH,MAAK,SAACG,GAAD,OAAUR,EAAQQ,MAC1BR,EAAQ,QACX,CAACA,IAEF,kBAACN,EAAYe,SAAb,CAAsBC,MAAO,CAAEX,OAAMC,YAClCH,I,6FCnBMc,EACE,UADFA,EAEH,UAFGA,EAGC,UCiHCC,EA7GD,WAAO,IAAD,EACcd,mBAAS,IADvB,mBACXe,EADW,KACDC,EADC,OAEchB,mBAAS,IAFvB,mBAEXiB,EAFW,KAEDC,EAFC,OAGoBlB,oBAAS,GAH7B,mBAGXmB,EAHW,KAGEC,EAHF,OAIQC,qBAAWzB,GAA7BK,EAJU,EAIVA,KAAMC,EAJI,EAIJA,QAJI,EAKQF,mBAAS,MALjB,mBAKXsB,EALW,KAKJC,EALI,KAOZC,EAAe,uCAAG,WAAOT,EAAUE,GAAjB,eAAAQ,EAAA,sDAChBC,EAAO,CAAEX,SAAUA,EAAUE,SAAUA,GAC7CX,MAAM,SAAU,CACdqB,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUL,KAEpBnB,MAAK,SAACC,GACL,GAAmB,MAAfA,EAAIC,OAAgB,OAAOD,EAAIE,OAEnC,MADAsB,EAAK,6BACCC,MAAM,gCAEb1B,MAAK,SAACG,GAAD,OAAUR,EAAQQ,MACvBwB,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,MAfR,2CAAH,wDA8BrB,SAASH,EAAKM,GACZf,EAASe,GACTC,OAAOC,YAAW,WAChBjB,EAAS,QACR,KAGL,OACE,yBACEkB,MAAO,CAAEC,QAAS,OAAQC,eAAgB,SAAUC,UAAW,SAE/D,kBAACC,EAAA,EAAD,CAAMJ,MAAO,CAAEK,MAAO,QAASC,OAAQ,QACrC,kBAACF,EAAA,EAAKG,KAAN,KACE,kBAACH,EAAA,EAAKI,MAAN,CAAYR,MAAO,CAAES,UAAW,WAC9B,kDAEF,kBAACL,EAAA,EAAKI,MAAN,CACER,MAAO,CAAES,UAAW,SAAUC,MAAOtC,IADvC,UAKA,kBAACgC,EAAA,EAAKO,SAAN,CACEX,MAAO,CAAES,UAAW,SAAUC,MAAOtC,GACrCwC,UAAU,QAFZ,iBAMA,kBAACC,EAAA,EAAD,CACEb,MAAO,CAAEG,UAAW,QACpBS,UAAU,4BACVE,MAAM,MAEN,kBAACC,EAAA,EAAD,KACGlC,GAAS,kBAACmC,EAAA,EAAD,CAAOC,QAAQ,WAAWpC,GACpC,6BACE,kBAACkC,EAAA,EAAKG,MAAN,KACE,kBAACC,EAAA,EAAD,CACEnB,MAAO,CAAEK,MAAO,QAChBe,KAAK,OACLC,MAAM,WACNlD,MAAOG,EACPgD,SAAU,SAACC,GAAD,OAAOhD,EAAYgD,EAAEC,OAAOrD,QACtCsD,QAAS,SAACC,GAAD,OAAanD,EAAYmD,QAIxC,6BACE,kBAACX,EAAA,EAAKG,MAAN,CAAYS,UAAU,qBACpB,kBAACR,EAAA,EAAD,CACEnB,MAAO,CAAEK,MAAO,QAChBe,KAAK,WACLC,MAAM,WACNlD,MAAOK,EACP8C,SAAU,SAACC,GAAD,OAAO9C,EAAY8C,EAAEC,OAAOrD,QACtCsD,QAAS,SAACC,GAAD,OAAajD,EAAYiD,QAIxC,yBAAK1B,MAAO,CAAES,UAAW,WACvB,kBAACmB,EAAA,EAAD,CAAQC,QAvEtB,SAAoBN,GAClBA,EAAEO,iBACF/C,EAAgBT,EAAUE,GAC1BG,GAAe,IAoE0BsC,QAAQ,WAArC,eAQTvC,EAzEL,WACE,GAAIlB,EACF,OAAO,kBAAC,IAAD,CAAUuE,GAAG,YAuELC,GAAmB,K,yBCiBzBC,EAzHC,WAAO,IACbzE,EAASoB,qBAAWzB,GAApBK,KADY,EAEkBD,mBAAS,MAF3B,mBAEA2E,GAFA,WAIdC,EAAaC,YAAU,CAC3BC,KAAM,CACJC,QAAQ,EACRnC,UAAW,UAEbmC,QAAS,EACT5B,MAAM,QACNP,UAAU,QAGNoC,EAAWH,YAAU,CACzBC,KAAM,CACJC,QAAQ,EACRnC,UAAW,SAEbmC,QAAS,EACTnC,UAAU,QAMZzC,qBAAU,YACY,uCAAG,8BAAAsB,EAAA,0DACjBxB,EADiB,gCAEDK,MAAM,sBAAD,OAAuBL,EAAKgF,KAFhC,cAEbC,EAFa,gBAGAA,EAAIxE,OAHJ,cAGbyE,EAHa,yBAIZA,GAJY,2CAAH,qDAOpBC,GAAiB7E,MAAK,SAAC4E,GACrBR,EAAeQ,QAEhB,CAAClF,IAYJ,OACE,6BACE,kBAACoF,EAAA,EAAD,CAAW5C,MAXQ,CACrB6C,WACE,wSACFC,mBAAoB,aACpBC,eAAgB,QAChBC,OAAQ,QACRC,aAAc,QAMV,yBAAKjD,MAAO,CAAEC,QAAS,OAAQC,eAAgB,WAC7C,yBAAKF,MAAO,CAAES,UAAW,SAAUH,OAAQ,kBAAmB4C,QAAS,SACrE,kBAAC,IAASC,IAAV,CAAcnD,MAAOmC,GACnB,qDAEF,uBAAGnC,MAAO,CAAEU,MAAO,UACjB,0BAAME,UAAU,gBAAhB,qHAMN,yBAAKZ,MAAO,CAAEC,QAAS,OAAQC,eAAgB,YAC1C1C,GAAQ,kBAAC,gBAAD,CAAeuE,GAAG,YAAY/B,MAAO,CAAEG,UAAW,SAC3D,kBAACyB,EAAA,EAAD,CAAQhB,UAAU,cAAlB,wBAIN,kBAAC,IAASuC,IAAV,CAAcnD,MAAOuC,GACnB,yBAAKvC,MAAO,CAAEC,QAAS,OAAQC,eAAgB,WAC7C,kBAACE,EAAA,EAAD,CAAMJ,MAAO,CAAEM,OAAQ,MAAOD,MAAO,OAASO,UAAU,eACtD,kBAACR,EAAA,EAAKG,KAAN,KACE,kBAACH,EAAA,EAAKI,MAAN,kCACA,kBAACJ,EAAA,EAAKgD,KAAN,yIAKA,kBAAC,gBAAD,CAAerB,GAAG,qBAChB,kBAACH,EAAA,EAAD,CAAQX,QAAQ,WAAhB,2BAMV,kBAAC,IAASkC,IAAV,CAAcnD,MAAOuC,GACrB,yBAAKvC,MAAO,CAAEC,QAAS,OAAQC,eAAgB,WAC7C,kBAACE,EAAA,EAAD,CAAMJ,MAAO,CAAEM,OAAQ,MAAOD,MAAO,OAASO,UAAU,eACtD,kBAACR,EAAA,EAAKG,KAAN,KACE,kBAACH,EAAA,EAAKI,MAAN,wBACA,kBAACJ,EAAA,EAAKgD,KAAN,iJAGA,kBAAC,gBAAD,CAAerB,GAAG,SAChB,kBAACH,EAAA,EAAD,CAAQX,QAAQ,WAAhB,sBAMR,kBAAC,IAASkC,IAAV,CAAcnD,MAAOuC,GACrB,yBAAKvC,MAAO,CAAEC,QAAS,OAAQC,eAAgB,WAC7C,kBAACE,EAAA,EAAD,CAAMJ,MAAO,CAAEM,OAAQ,MAAOD,MAAO,OAASO,UAAU,eACtD,kBAACR,EAAA,EAAKG,KAAN,KACE,kBAACH,EAAA,EAAKI,MAAN,wBACA,kBAACJ,EAAA,EAAKgD,KAAN,yDAGA,kBAAC,gBAAD,CAAerB,GAAG,WAClB,kBAACH,EAAA,EAAD,CAAQX,QAAQ,WAAhB,4B,2BCbGoC,EAlGA,WAAO,IAAD,EACOzE,qBAAWzB,GAA7BK,EADW,EACXA,KAAMC,EADK,EACLA,QADK,EAEmBF,mBAAS,MAF5B,mBAEZ+F,EAFY,KAECpB,EAFD,OAGe3E,oBAAS,GAHxB,mBAGZgG,EAHY,KAGDC,EAHC,KA0BnB,OArBA9F,qBAAU,YACY,uCAAG,8BAAAsB,EAAA,0DACjBxB,EADiB,gCAEDK,MAAM,sBAAD,OAAuBL,EAAKgF,KAFhC,cAEbC,EAFa,gBAGAA,EAAIxE,OAHJ,cAGbyE,EAHa,yBAIZA,GAJY,2CAAH,qDAOpBC,GAAiB7E,MAAK,SAAC4E,GACrBR,EAAeQ,QAEhB,CAAClF,EAAM0E,IAEVxE,qBAAU,WACJ6F,GACF1F,MAAM,WACHC,MAAK,kBAAML,EAAQ,SACnBK,MAAK,kBAAM0F,GAAa,QAE5B,CAACD,IAGF,kBAACE,EAAA,EAAD,CACEC,OAAO,MACP1D,MAAO,CAAE2D,gBAAiBvF,GAC1BwF,OAAO,MAEP,kBAAC,gBAAD,CAAe5D,MAAO,CAAEU,MAAO,SAAWqB,GAAG,KAC3C,kBAAC0B,EAAA,EAAOI,MAAR,CACE7D,MAAO,CACL2D,gBAAiB,QACjBG,WAAY,QACZC,WAAY,MACZC,UAAW,WAGb,uBAAGpD,UAAU,uBARf,eAWF,kBAAC6C,EAAA,EAAOQ,OAAR,CAAeC,gBAAc,qBAC7B,kBAACT,EAAA,EAAOU,SAAR,CAAiB3B,GAAG,oBAClB,kBAAC4B,EAAA,EAAD,CAAKxD,UAAU,YACf,kBAACwD,EAAA,EAAD,KACG5G,GAAuB,MAAf8F,EACP,oCACE,kBAAC,gBAAD,CAAetD,MAAO,CAAEU,MAAO,SAAWqB,GAAG,YAC3C,kBAACqC,EAAA,EAAIC,KAAL,oBAGF,kBAACC,EAAA,EAAD,CACEC,MAAM,YACNvE,MAAO,CAAEU,MAAO,SAChB8B,GAAG,sBAEFc,EAAYkB,KAAI,SAACC,GAChB,OACE,kBAACH,EAAA,EAAYI,KAAb,CACE1E,MAAO,CAAEU,MAAO,SAChBiE,IAAKF,EAAUG,MAEf,kBAAC,gBAAD,CAAe7C,GAAE,uBAAkB0C,EAAUjC,KAC3C,kBAAC4B,EAAA,EAAIC,KAAL,KAAWI,EAAUG,YAO/B,kBAAC,gBAAD,CAAe5E,MAAO,CAAEU,MAAO,SAAWqB,GAAG,WAC3C,kBAACqC,EAAA,EAAIC,KAAL,gBAEF,kBAAC,gBAAD,CAAerE,MAAO,CAAEU,MAAO,SAAWqB,GAAG,SAC3C,kBAACqC,EAAA,EAAIC,KAAL,cAEF,kBAACD,EAAA,EAAIC,KAAL,CAAUxC,QAAS,kBAAM2B,GAAa,KAAtC,UACCD,GAAa,kBAAC,IAAD,CAAUxB,GAAG,OAG7B,oCACE,kBAAC,gBAAD,CAAe/B,MAAO,CAAEU,MAAO,SAAWqB,GAAG,aAC3C,kBAACqC,EAAA,EAAIC,KAAL,iBAEF,kBAAC,gBAAD,CAAerE,MAAO,CAAEU,MAAO,SAAWqB,GAAG,UAC3C,kBAACqC,EAAA,EAAIC,KAAL,oB,kBC5CDQ,EAvCG,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,KAAMC,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,UAc1C,OACE,yBAAKjF,MAAO,CAAEkF,aAAc,SAC1B,kBAACC,EAAA,EAAD,CACEnF,MAAO,CAAEK,MAAO,QAChB+E,IAAG,2CAAsCJ,EAAtC,YAAgDF,EAAhD,QACHO,SAAO,IAET,kBAACzD,EAAA,EAAD,CAAQC,QAAS,kBAAMkD,EAnBH,WAKtB,IAJA,IAAMO,EAAa,sCACbC,EAAMD,EAAWE,OAAS,EAE5BC,EAAe,GACVC,EAFG,EAEMA,EAAIH,EAAKG,GAAK,EAC9BD,GAAgBH,EAAWK,KAAKC,KAAKD,KAAKE,UAAYN,EAH5C,OAKZ,OAAOE,EAW0BK,MAA/B,mBAGA,kBAACC,EAAA,EAAD,CACE/F,MAAO,CAAEK,MAAO,OAAQK,MAAOtC,GAC/BiD,MAAM,wBACN2E,QAAS,CACP,CAAE3E,MAAO,WAAYlD,MAAO,UAC5B,CAAEkD,MAAO,YAAalD,MAAO,QAC7B,CAAEkD,MAAO,eAAgBlD,MAAO,SAChC,CAAEkD,MAAO,QAASlD,MAAO,UACzB,CAAEkD,MAAO,YAAalD,MAAO,cAE/BmD,SAAU,SAAC2E,GAAD,OAAYhB,EAAUgB,EAAO9H,YCgIhC+H,MAvKf,WAAqB,IAAD,EACc3I,mBAAS,IADvB,mBACXe,EADW,KACDC,EADC,OAEQhB,mBAAS,IAFjB,mBAEX4I,EAFW,KAEJC,EAFI,OAGc7I,mBAAS,IAHvB,mBAGXiB,EAHW,KAGDC,EAHC,OAIoBlB,oBAAS,GAJ7B,mBAIXmB,EAJW,KAIEC,EAJF,OAKQpB,mBAAS,MALjB,mBAKXsB,EALW,KAKJC,EALI,OAMcvB,mBAAS,MANvB,mBAMX8I,EANW,KAMDC,EANC,OAOU/I,mBAAS,UAPnB,mBAOXyH,EAPW,KAOHC,EAPG,OAQM1H,mBAAS,aARf,mBAQXuH,EARW,KAQLC,EARK,iDAUlB,sBAAA/F,EAAA,sDACEnB,MAAM,QAAS,CACbqB,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBiH,OAAQ,CAACvB,EAAQF,GACjBxG,SAAUA,EACV6H,MAAOA,EACP3H,SAAUA,MAVhB,4CAVkB,sBAyBlB,SAASe,EAAKM,GACZf,EAASe,GACTC,OAAOC,YAAW,WAChBjB,EAAS,QACR,KAoDL,OANApB,qBAAU,WACJgB,GACF4H,EAAY,kBAAC,IAAD,CAAUvE,GAAG,cAE1B,CAACrD,IAGF,yBACEsB,MAAO,CAAEC,QAAS,OAAQC,eAAgB,SAAUC,UAAW,SAE/D,kBAACC,EAAA,EAAD,CAAMJ,MAAO,CAAEK,MAAO,QAASC,OAAQ,QACrC,kBAACF,EAAA,EAAKG,KAAN,KACE,kBAACH,EAAA,EAAKI,MAAN,CAAYR,MAAO,CAAES,UAAW,WAC9B,kDAEF,kBAACL,EAAA,EAAKI,MAAN,CACER,MAAO,CAAES,UAAW,SAAUC,MAAOtC,IADvC,qBAKA,kBAACgC,EAAA,EAAKO,SAAN,CACEX,MAAO,CAAES,UAAW,SAAUC,MAAOtC,GACrCwC,UAAU,SAFZ,6BAMA,kBAACC,EAAA,EAAD,CACEb,MAAO,CAAEG,UAAW,QACpBS,UAAU,4BACVE,MAAM,MAELjC,GAAS,kBAACmC,EAAA,EAAD,CAAOC,QAAQ,WAAWpC,GACpC,0BAAM2H,SAxCK,SAACjF,GAEpB,GADAA,EAAEO,iBA9BmB,SAACxD,EAAU6H,EAAO3H,GAIvC,MAHsB,MAGJiI,KAAKnI,IACrBiB,EACE,4EAEK,GAELjB,EAASkH,OAAS,IACpBjG,EAAK,+DACE,GAELjB,EAASkH,OAAS,GACpBjG,EAAK,+DACE,IAEoC,IAhB1B,8CAgBJkH,KAAKN,EAAMO,gBACxBnH,EAAK,uDACE,KAELf,EAASgH,OAAS,KACpBjG,EAAK,2DACE,GAOLoH,CAAerI,EAAU6H,EAAO3H,GAElC,OAvEc,mCAsEdoI,GACOjI,GAAe,IAoCciC,UAAU,gBACtC,kBAAC,EAAD,CACEoE,OAAQA,EACRF,KAAMA,EACNG,UAAWA,EACXF,QAASA,IAEX,6BACE,kBAAChE,EAAA,EAAKG,MAAN,KACE,kBAACC,EAAA,EAAD,CACEnB,MAAO,CAAEK,MAAO,QAChBe,KAAK,OACLC,MAAM,WACNwF,OAAO,4CACP1I,MAAOG,EACPgD,SAAU,SAACC,GAAD,OAAOhD,EAAYgD,EAAEC,OAAOrD,QACtCsD,QAAS,SAACC,GAAD,OAAanD,EAAYmD,QAIxC,6BACE,kBAACX,EAAA,EAAKG,MAAN,CAAYS,UAAU,kBACpB,kBAACR,EAAA,EAAD,CACEnB,MAAO,CAAEK,MAAO,QAChBe,KAAK,QACLC,MAAM,QACNwF,OAAO,yBACP1I,MAAOgI,EACP7E,SAAU,SAACC,GAAD,OAAO6E,EAAS7E,EAAEC,OAAOrD,QACnCsD,QAAS,SAACC,GAAD,OAAa0E,EAAS1E,QAIrC,6BACE,kBAACX,EAAA,EAAKG,MAAN,CAAYS,UAAU,qBACpB,kBAACR,EAAA,EAAD,CACEnB,MAAO,CAAEK,MAAO,QAChBe,KAAK,WACLC,MAAM,WACNwF,OAAO,0CACP1I,MAAOK,EACP8C,SAAU,SAACC,GAAD,OAAO9C,EAAY8C,EAAEC,OAAOrD,QACtCsD,QAAS,SAACC,GAAD,OAAajD,EAAYiD,QAIxC,yBAAK1B,MAAO,CAAES,UAAW,WACvB,4BAAQW,KAAK,SAASR,UAAU,mBAAhC,oBAKHlC,GAAe,6BAAM2H,Q,SCxHnBS,EAzCF,WAAO,IACVtJ,EAASoB,qBAAWzB,GAApBK,KADS,EAEqBD,mBAAS,MAF9B,mBAEV+F,EAFU,KAEGpB,EAFH,KAiBjB,OAbAxE,qBAAU,YACY,uCAAG,8BAAAsB,EAAA,0DACjBxB,EADiB,gCAEDK,MAAM,sBAAD,OAAuBL,EAAKgF,KAFhC,cAEbC,EAFa,gBAGAA,EAAIxE,OAHJ,cAGbyE,EAHa,yBAIZA,GAJY,2CAAH,qDAOpBC,GAAiB7E,MAAK,SAAC4E,GACrBR,EAAeQ,QAEhB,CAAClF,IAGF,6BACkB,MAAf8F,GAA+B,MAAR9F,EACtB8F,EAAYkB,KAAI,SAACC,EAAWiB,GAC1B,OACE,kBAAC,OAAD,CAAMf,IAAKe,EAAG3D,GAAE,gBAAW0C,EAAUjC,KACnC,4BAAKiC,EAAUG,UAKrB,6BACE,kBAACmC,EAAA,EAAD,CACE/G,MAAO,CAAEC,QAAS,OAAQ+G,WAAY,UACtCC,eAAa,EACbC,QAAM,GAHR,sB,sDCUKC,EAzCK,SAAC,GAAc,IAC3BC,EAD0B,EAAXnI,KAErBU,QAAQC,IAAIwH,GAFoB,MAGA7J,qBAHA,mBAGzB8J,EAHyB,KAGfC,EAHe,KAkBhC,OAdF5J,qBAAU,YACM,uCAAG,gCAAAsB,EAAA,sDACT0G,EAAI,EADK,YACFA,EAAI0B,EAAS5B,QADX,iCAEQ3H,MAAM,SAAD,OAAUuJ,EAAS1B,GAAG6B,UAFnC,cAETC,EAFS,gBAGKA,EAASvJ,OAHd,OAGTwJ,EAHS,OAIfL,EAAS1B,GAAGpH,SAAWmJ,EAAMnJ,SAC7B8I,EAAS1B,GAAGV,OAASyC,EAAMzC,OAC3BoC,EAAS1B,GAAGZ,KAAO2C,EAAM3C,KANV,QACmBY,IADnB,uBAQjB4B,GAAY,GARK,4CAAH,qDAUhBI,MAEA/H,QAAQC,IAAIwH,GAER,kBAACO,EAAA,EAAQzG,MAAT,KACE,kBAAC0G,EAAA,EAAD,CAAQC,GAAG,KAAKC,UAAQ,GAAxB,YAGCT,GAAYD,EAAS5C,KAAI,SAACzG,GAEzB,OADA4B,QAAQC,IAAI7B,GAEV,kBAAC4J,EAAA,EAAD,KACE,kBAACA,EAAA,EAAQI,OAAT,CAAgB3C,IAAG,2CAAsCrH,EAAIiH,OAA1C,YAAoDjH,EAAI+G,KAAxD,UACnB,kBAAC6C,EAAA,EAAQK,QAAT,KACE,kBAACL,EAAA,EAAQM,OAAT,CAAgBJ,GAAG,KAAK9J,EAAIO,UAC5B,kBAACqJ,EAAA,EAAQO,SAAT,KACE,6BAAMnK,EAAIoK,aAEZ,kBAACR,EAAA,EAAQvE,KAAT,KAAerF,EAAIqK,gB,2BCuElBC,MArGf,SAAuBC,GAAQ,IAAD,EACF/K,mBAAS,IADP,mBACrBgH,EADqB,KACdgE,EADc,OAEJhL,mBAAS,IAFL,mBAErB6B,EAFqB,KAEfoJ,EAFe,OAGFjL,mBAAS,MAHP,mBAGrBsB,EAHqB,KAGdC,EAHc,OAIAvB,oBAAS,GAJT,mBAIrBkL,EAJqB,KAIbC,EAJa,KAKtBC,EAAcL,EAAM9F,GACpBoG,EAASN,EAAMM,OANO,4CAgC5B,WAA4BrH,GAA5B,iBAAAvC,EAAA,6DACEuC,EAAEO,iBAGA+G,EADEJ,EACY,CACZvJ,OAAQ,MACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAAEiF,QAAOnF,OAAMwJ,YAGxB,CACZ1J,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAAEiF,QAAOnF,OAAMuJ,iBAjB1C,SAqBoB9K,MAAM,SAAUgL,GArBpC,UAsBqB,OADb9K,EArBR,QAsBUC,OAtBV,yCAuBWuB,EAAK,8CAvBhB,UAyBqB,MAAfxB,EAAIC,OAzBV,yCA0BWuB,EACL,uEA3BN,OA8BqB,MAAfxB,EAAIC,QACNsK,EAAMQ,SAAQ,GA/BlB,6CAhC4B,sBAmE5B,SAASvJ,EAAKM,GACZf,EAASe,GACTC,OAAOC,YAAW,WAChBjB,EAAS,QACR,KAGL,OAnEApB,qBAAU,WAENgL,EAAUJ,EAAMG,QAEZA,IACFF,EAASD,EAAM/D,OACfiE,EAAQF,EAAMlJ,SAKjB,CAACqJ,IAyDF,oCACE,6CACC5J,GAAS,kBAACmC,EAAA,EAAD,CAAOC,QAAQ,WAAWpC,GACpC,kBAACkC,EAAA,EAAD,KACE,kBAACI,EAAA,EAAD,CACEE,MAAM,QACNwF,OAAO,yBACPkC,UAAW,IACX5K,MAAOoG,EACPjD,SAhER,SAA2BC,GACzB,IAAMyH,EAAezH,EAAEC,OAAOrD,MAET,MAAjBoG,EAAMiB,QACV+C,EAASS,IA6DHvH,QAAS,kBAAM8G,EAAS,OAE1B,6BACA,kBAACU,EAAA,EAAD,CACE5H,MAAM,YACNwF,OAAO,yEACP1I,MAAOiB,EACPkC,SAjER,SAA0BC,GACxB,IAAM2H,EAAc3H,EAAEC,OAAOrD,MAC7BqK,EAAQU,MAiEJ,6BACA,kBAACtH,EAAA,EAAD,CAAQC,QA/Fc,6CA+FtB,a,QClEOsH,MA5Bf,SAAgBb,GAAQ,IAAD,EACG/K,oBAAS,GADZ,mBACd6L,EADc,KACRN,EADQ,KAQrB,OAFmBO,sBAGjB,6BACE,kBAAC,IAAS3E,KAAV,CAAe4E,KAAK,OAAOzH,QAPZ,WACjBiH,GAAQ,MAON,kBAACS,EAAA,EAAD,CAAOH,KAAMA,EAAMI,OATH,kBAAMV,GAAQ,IASUW,WAAW,GACjD,kBAACF,EAAA,EAAM3B,OAAP,CAAc8B,aAAW,GAAzB,YACA,kBAACH,EAAA,EAAMhJ,KAAP,KACE,kBAAC,EAAD,CACEuI,QAASA,EACTa,WAAYrB,EAAMqB,WAClBf,OAAQN,EAAM9F,GACdiG,QAAM,EACNlE,MAAO+D,EAAM/D,MACbnF,KAAMkJ,EAAMlJ,WCgLTwK,MAjMf,SAActB,GAAQ,IAAD,EACW/K,oBAAS,GADpB,mBACHoM,GADG,WAEXnM,EAASoB,qBAAWzB,GAApBK,KAFW,EAGOD,mBAAS,IAHhB,mBAGZsM,EAHY,KAGLC,EAHK,OAIavM,mBAAS,MAJtB,mBAIZ6J,EAJY,KAIF2C,EAJE,OAK+BxM,oBAAS,GALxC,mBAKZyM,EALY,KAKOC,EALP,OAMW1M,oBAAS,GANpB,mBAMZ2M,EANY,KAMHC,EANG,KAObC,EAAc,IAAIC,KAAK/B,EAAMrJ,KAAKkJ,YAPrB,EAQmB5K,qBARnB,mBAQZ+M,EARY,KAQCC,EARD,OAuBKhN,oBAAS,GAvBd,6BAwBnBG,qBAAU,YACM,uCAAG,gCAAAsB,EAAA,sEACGnB,MAAM,UAAD,OAAWyK,EAAMrJ,KAAKuD,KAD9B,cACTC,EADS,gBAEGA,EAAIxE,OAFP,OAETF,EAFS,OAGf+L,EAAS/L,GACA2H,EAAI,EAJE,YAICA,EAAImE,EAAMrE,QAJX,oBAKTqE,EAAMnE,GAAG6B,UAAY/J,EAAKgF,GALjB,0CAMJ2H,GAAW,IANP,QAImBzE,IAJnB,2DAAH,qDAWd8E,KACC,CAACN,IArCe,MAuCqB3M,mBAAS,MAvC9B,mBAuCZkN,EAvCY,KAuCEC,EAvCF,KAyCbC,EAAO,uCAAG,8BAAA3L,EAAA,sEACInB,MAAM,SAAD,OAAUyK,EAAMrJ,KAAKsI,UAD9B,cACR9E,EADQ,gBAEaA,EAAIxE,OAFjB,OAERwM,EAFQ,OAGdC,EAAgBD,GAHF,2CAAH,qDAMb/M,qBAAU,WACRiN,MACC,IAEH,IAAMC,EAAI,uCAAG,oCAAA5L,EAAA,yDACL6L,EAAW,CACf3L,OAAQ,OACRC,QAAS,CACP,eAAgB,sBAIJ,IAAZ+K,EARO,iCASSrM,MAAM,WAAD,OAAYyK,EAAMrJ,KAAKuD,GAAvB,YAA6BhF,EAAKgF,IAAMqI,GATtD,cASHpI,EATG,gBAUSA,EAAIxE,OAVb,OAUHF,EAVG,OAWT+L,EAAS/L,GACToM,GAAW,GAZF,yCAcStM,MAAM,SAAD,OAAUyK,EAAMrJ,KAAKuD,GAArB,YAA2BhF,EAAKgF,IAAMqI,GAdpD,eAcHpI,EAdG,iBAeSA,EAAIxE,OAfb,QAeHF,EAfG,OAgBT+L,EAAS/L,GACToM,GAAW,GAjBF,4CAAH,qDAqBJW,EAAW,uCAAG,8BAAA9L,EAAA,0DACdgL,EADc,gBAEhBC,GAAqB,GAFL,uCAIEpM,MAAM,aAAD,OAAcyK,EAAMrJ,KAAKuD,KAJhC,cAIVC,EAJU,gBAKOA,EAAIxE,OALX,OAKVmJ,EALU,OAMhB2C,EAAY3C,GACZ6C,GAAqB,GAPL,4CAAH,qDAyBXc,EAAa,uCAAG,kCAAA/L,EAAA,6DACpBW,QAAQC,IAAI,SACNgJ,EAASN,EAAMrJ,KAAKuD,GACpB4F,EAAUkC,EACVU,EAAc,CAClB9L,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAAEsJ,SAAQR,aATb,SAWFvK,MAAM,YAAamN,GAXjB,cAWdvI,EAXc,gBAYFA,EAZE,0DAAH,qDAcnB,OACE,kBAACiC,EAAA,EAAD,CACE1E,MAAO,CACLK,MAAO,MACP4K,WAAY,MACZ9K,UAAW,OACXG,OAAQ,kBACR4C,QAAS,OACTgI,UAAW,oBAGb,kBAACxG,EAAA,EAAKS,MAAN,CAAYC,IAAI,6DAChB,kBAACV,EAAA,EAAKsD,QAAN,KACE,kBAACtD,EAAA,EAAKkD,OAAN,CAAaC,GAAG,KAAKS,EAAMrJ,KAAKsF,OAC/BkG,EACC,kBAAC,gBAAD,CAAe1I,GAAE,gBAAW0I,EAAajI,KACvC,kBAAC4B,EAAA,EAAIC,KAAL,KAAWoG,EAAanM,WAG1B,GAEDgK,EAAMrJ,KAAKsI,UAAY/J,EAAKgF,IAC3B,kBAAC,IAAD,CAAQ2I,QAAQ,SACd,kBAAC,IAAD,CAAUA,QAAQ,QAAQC,KAAK,QAC7B,kBAAC,IAASC,KAAV,KACE,kBAAC,IAAS3G,KAAV,CACE4E,KAAK,SACLzH,QAAS,kBAvDLW,EAuDsB8F,EAAMrJ,KAAKuD,QAtDnD3E,MAAM,UAAD,OAAW2E,GAAM,CACpBtD,OAAQ,SACRC,QAAS,CACP,eAAgB,sBAJH,IAACqD,KAyDN,kBAAC,IAASkC,KAAV,CAAe4E,KAAK,QAClB,kBAAC,EAAD,CACEK,WAAYA,EACZnH,GAAI8F,EAAMrJ,KAAKuD,GACf+B,MAAO+D,EAAMrJ,KAAKsF,MAClBnF,KAAMkJ,EAAMrJ,KAAKmJ,cAQ7B,kBAAC1D,EAAA,EAAK4G,KAAN,KAhJS,CACb,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAqIclB,EAAYmB,YADtB,IACoCnB,EAAYoB,UADhD,IAC4D,IACzDpB,EAAYqB,cAFf,IAE+BrB,EAAYsB,WAF3C,IAGGtB,EAAYuB,aAAc,IAC1BvB,EAAYsB,YAAc,GAAK,KAAO,MAEzC,kBAAChH,EAAA,EAAKkH,YAAN,KACE,kBAAC,IAAD,CACEtC,KAAMhB,EAAMrJ,KAAKmJ,QACjByD,IAAK,IACLtG,IAAK,IACLuG,MAAO,IACPC,aAAa,iBAGjB,kBAACrH,EAAA,EAAKsH,MAAN,KACE,kBAAC5L,EAAA,EAAKiE,KAAN,KAAYwF,EAAMrE,QAClB,kBAACpF,EAAA,EAAKiE,KAAN,CAAWxC,QAAS,kBAAM+I,MACvBV,EAAU,UAAY,QAEzB,kBAAC9J,EAAA,EAAKiE,KAAN,CAAWxC,QAAS,kBAAMiJ,MAA1B,aAGDd,GAAqB,kBAAC,EAAD,CAAa/K,KAAMmI,IAEzC,kBAAC,IAAD,KACE,kBAAC,IAAK6B,SAAN,CAAe5I,MAAO,GAAIiB,SAvFlC,SAA6BC,GAC3B,IAAM0K,EAAiB1K,EAAEC,OAAOrD,MAChCoM,EAAe0B,MAsFT,kBAAC,IAAKrK,OAAN,CACEwG,QAAQ,YACR8D,cAAc,QACdd,KAAK,OACLe,SAAO,EACPtK,QAAS,kBAAMkJ,WCzJZqB,MAnCf,SAAsB9D,GAAQ,IAAD,EACH/K,oBAAS,GADN,mBACpB6L,EADoB,KACdN,EADc,KAM3B,OAFmBO,sBAGjB,6BACE,kBAAC5F,EAAA,EAAD,CAAQ4I,MAAM,UACZ,kBAAC,IAAD,CACEhL,MAAM,aACN6K,cAAc,OACdI,KAAK,UACL5L,MAAM,QACNV,MAAO,CAAE2D,gBAAiBvF,GAC1BmO,UAAQ,EACRnB,KAAK,OACLvJ,QAdW,kBAAMiH,GAAQ,MAiB3B,kBAACS,EAAA,EAAD,CAAOH,KAAMA,EAAMI,OAlBL,kBAAMV,GAAQ,IAkBYW,WAAW,GACjD,kBAACF,EAAA,EAAM3B,OAAP,CAAc8B,aAAW,GAAzB,YACA,kBAACH,EAAA,EAAMhJ,KAAP,KACE,kBAAC,EAAD,CACEuI,QAASA,EACTa,WAAYrB,EAAMqB,WAClBnH,GAAI8F,EAAM9F,UCSTgK,OApCf,WAAqB,IAAD,EACcjP,mBAAS,MADvB,mBACXiK,EADW,KACDiF,EADC,OAEYlP,oBAAS,GAFrB,mBAEFoM,GAFE,WAGVnH,EAAOkK,cAAPlK,GAWR,OATA9E,qBAAU,YACK,uCAAG,8BAAAsB,EAAA,sEACInB,MAAM,oBAAD,OAAqB2E,IAD9B,cACRC,EADQ,gBAESA,EAAIxE,OAFb,OAERuJ,EAFQ,OAGdiF,EAAYjF,GAHE,2CAAH,qDAKbmF,KACC,CAACnK,IAEgB,OAAbgF,EACL,6BACE,kBAACT,EAAA,EAAD,CACE/G,MAAO,CAAEC,QAAS,OAAQ+G,WAAY,UACtCC,eAAa,EACbC,QAAM,GAHR,oBASF,oCACE,kBAAC,EAAD,CAAcyC,WAAYA,IAC1B,kBAACjF,EAAA,EAAKxD,MAAN,KACGsG,EAAShD,KAAI,SAACzG,EAAK2H,GAAN,OACZ,kBAAC,EAAD,CAAMf,IAAK5G,EAAIwG,MAAQmB,EAAGzG,KAAMlB,U,UC+E3B6O,OA3Gf,WAAwB,IAAD,EACWrP,mBAAS,IADpB,mBACdiK,EADc,KACJiF,EADI,OAEalP,qBAFb,mBAEdkH,EAFc,KAEHoI,EAFG,OAGOtP,oBAAS,GAHhB,mBAGduP,EAHc,KAGNC,EAHM,OAIOxP,oBAAS,GAJhB,mBAIdyP,EAJc,KAILC,EAJK,KAKbzP,EAASoB,qBAAWzB,GAApBK,KACRE,qBAAU,WACRG,MAAM,gBACHC,MAAK,SAACC,GACL,OAAmB,MAAfA,EAAIC,OAAuBD,EAAIE,OAC5B,MAERH,MAAK,SAACG,GAAD,OAAUiP,EAAiB1P,EAAKgF,GAAIvE,MACzCH,MAAK,SAACG,GAAD,OAAUwO,EAAYxO,QAC7B,CAACwO,IAEJ,IAAMS,EAAgB,uCAAG,WAAO1K,EAAIvE,GAAX,qBAAAe,EAAA,sEACLnB,MAAM,sBAAD,OAAuB2E,IADvB,cACjBC,EADiB,gBAELA,EAAIxE,OAFC,OAGvB,IADMF,EAFiB,OAGd2H,EAAI,EAAGA,EAAI3H,EAAIyH,OAAQE,IAC9B,IAASyH,EAAI,EAAGA,EAAIlP,EAAKuH,OAAQ2H,IAC3BpP,EAAI2H,GAAGlD,KAAOvE,EAAKkP,GAAG3K,IACxBvE,EAAKmP,OAAOD,EAAG,GANE,yBAUhBlP,GAVgB,2CAAH,wDAhBD,4CA6BrB,WAAoBoP,EAAQ1E,GAA5B,iBAAA3J,EAAA,6DACE6N,EAAalE,GACPE,EAAc,CAClB3J,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAAE+N,SAAQ1E,iBAPnC,SASoB9K,MAAM,QAASgL,GATnC,UAUqB,OADb9K,EATR,QAUUC,QACN2B,QAAQC,IACN,sEAGe,MAAf7B,EAAIC,OAfV,yCAgBW+O,GAAU,IAhBrB,4CA7BqB,kEAiDrB,WAAqBpE,GAArB,SAAA3J,EAAA,6DACE6N,EAAalE,GADf,kBAESsE,GAAS,IAFlB,4CAjDqB,sBAsDrB,OAA2B,IAApBzF,EAAShC,OACd,kBAAC8H,GAAA,EAAD,CAAS7D,UAAU,SAAS8D,KAAK,UAC/B,0BAAM3M,UAAU,WAAhB,eAGF,yBACEZ,MAAO,CAAEC,QAAS,OAAQC,eAAgB,SAAUC,UAAW,SAE9D6M,GAAW,kBAAC,IAAD,CAAUjL,GAAE,wBAAmB0C,KAC1CqI,GAAU,kBAAC,IAAD,CAAU/K,GAAE,uBAAkB0C,KACzC,yBAAKzE,MAAO,CAAES,UAAW,WAEvB,wBAAIT,MAAO,CAACkF,aAAa,SAAzB,wBACA,kBAAC,gBAAD,CAAelF,MAAO,CAACkF,aAAa,QAASnD,GAAG,oBAC9C,kBAACH,EAAA,EAAD,4BAGF,yBAAK5B,MAAO,CAACiL,WAAW,OAAOuC,YAAY,SACxChG,EAAShD,KAAI,SAACzG,EAAK0P,GAAN,OACZ,kBAACrN,EAAA,EAAD,CAAMJ,MAAO,CAAEkF,aAAc,QAAUP,IAAK8I,GAC1C,kBAACrN,EAAA,EAAKG,KAAN,KACE,kBAACH,EAAA,EAAKI,MAAN,KAAazC,EAAI2P,cACjB,kBAACtN,EAAA,EAAKgD,KAAN,KAAYrF,EAAI4P,WAElB,yBACE3N,MAAO,CACLC,QAAS,OACTC,eAAgB,eAChBgF,aAAc,QAGhB,kBAACtD,EAAA,EAAD,CACE5B,MAAO,CAAEK,MAAO,OAChBwB,QAAS,kBAvFJ,6CAuFU+L,CAAKpQ,EAAKgF,GAAIzE,EAAIyE,MAFnC,QAMA,kBAACZ,EAAA,EAAD,CACE5B,MAAO,CAAEK,MAAO,OAChBwB,QAAS,kBA7FJ,2CA6FUgM,CAAM9P,EAAIyE,KACzBvB,QAAQ,aAHV,kB,wCCyID2I,GAtNF,SAAC,GAAc,IAAZ3K,EAAW,EAAXA,KAER6O,EAAWC,cACTxJ,EAAUtF,EAAVsF,MACF6F,EAAc,IAAIC,KAAKpL,EAAKkJ,YAC5BS,EAAS3J,EAAKuD,GACdwL,EAAe/O,EAAKsI,QAGlB/J,GAFYyB,EAAKgP,aAERrP,qBAAWzB,GAApBK,MATiB,EAUKD,oBAAS,GAVd,mBAUToM,GAVS,aAWCpM,mBAAS,IAXV,mBAWlBsM,EAXkB,KAWXC,EAXW,OAYOvM,mBAAS,MAZhB,mBAYlB6J,EAZkB,KAYR2C,EAZQ,OAayBxM,oBAAS,GAblC,mBAalByM,EAbkB,KAaCC,EAbD,OAcK1M,oBAAS,GAdd,mBAclB2M,EAdkB,KAcTC,EAdS,OAeS5M,oBAAS,GAflB,mBAelB2Q,EAfkB,KAePC,EAfO,OAgBD5Q,oBAAS,GAhBR,6BAkBzBG,qBAAU,YACM,uCAAG,gCAAAsB,EAAA,sEACGnB,MAAM,UAAD,OAAW+K,IADnB,cACTnG,EADS,gBAESA,EAAIxE,OAFb,OAETmQ,EAFS,OAGftE,EAASsE,GACA1I,EAAI,EAJE,YAICA,EAAImE,EAAMrE,QAJX,oBAKTqE,EAAMnE,GAAG6B,UAAYyG,EALZ,0CAKiC7D,GAAW,IAL5C,QAImBzE,IAJnB,2DAAH,qDAQd8E,KACC,CAACN,IA5BqB,MA8BG3M,mBAAS,MA9BZ,mBA8BlB8Q,EA9BkB,KA8BVC,EA9BU,KAgCzB5Q,qBAAU,YACO,uCAAG,8BAAAsB,EAAA,sEACEnB,MAAM,SAAD,OAAUmQ,IADjB,cACVvL,EADU,gBAEQA,EAAIxE,OAFZ,OAEVsQ,EAFU,OAGhBD,EAAUC,GAHM,2CAAH,qDAKfC,KACC,IAEH,IAAM1D,EAAW,uCAAG,8BAAA9L,EAAA,0DACdgL,EADc,gBAEhBC,GAAqB,GAFL,uCAIEpM,MAAM,aAAD,OAAc+K,IAJrB,cAIVnG,EAJU,gBAKOA,EAAIxE,OALX,OAKVmJ,EALU,OAMhB2C,EAAY3C,GACZ6C,GAAqB,GAPL,4CAAH,qDAWXwE,GAAQ,uCAAG,oCAAAzP,EAAA,yDACT0P,EAAW,CACfxP,OAAQ,SAGNgL,EALW,iCAMKrM,MAAM,WAAD,OAAY+K,EAAZ,YAAsBoF,GAAgBU,GANhD,cAMPjM,EANO,gBAOUA,EAAIxE,OAPd,OAOP0Q,EAPO,OAQb7E,EAAS6E,GACTxE,GAAW,GATE,yCAWKtM,MAAM,SAAD,OAAU+K,EAAV,YAAoBoF,GAAgBU,GAX9C,eAWPjM,EAXO,iBAYUA,EAAIxE,OAZd,QAYP0Q,EAZO,OAab7E,EAAS6E,GACTxE,GAAW,GAdE,4CAAH,qDA0BRyE,GAAU,uCAAG,WAAOhG,GAAP,SAAA5J,EAAA,+EACjBnB,MAAM,UAAD,OAAW+K,GAAU,CAAE1J,OAAQ,YADnB,2CAAH,sDA9ES,GAiFa3B,mBAAS,IAjFtB,qBAiFlB+M,GAjFkB,MAiFLC,GAjFK,MAmFnBQ,GAAa,uCAAG,4BAAA/L,EAAA,6DACd6P,EAAc,CAClB3P,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAAEsJ,SAAQR,QAASkC,MANtB,SAQdzM,MAAM,YAAagR,GARL,OASpBV,GAAa,SAACW,GAAD,OAAQA,KATD,2CAAH,qDAnFM,GAoGUT,GAAU,CAC3CrJ,OAAQ,YACRF,KAAM,KACNxG,SAAU,QAHJ0G,GApGiB,GAoGjBA,OAAQF,GApGS,GAoGTA,KAKVyB,IAzGmB,GAoGHjI,SAKV,2CAAuC0G,GAAvC,YAAiDF,GAAjD,SAzGa,GA2GevH,mBAAS,MA3GxB,qBA2GlBkN,GA3GkB,MA2GJC,GA3GI,MA6GnBC,GAAO,uCAAG,8BAAA3L,EAAA,sEACInB,MAAM,SAAD,OAAUoB,EAAKsI,UADxB,cACR9E,EADQ,gBAEaA,EAAIxE,OAFjB,OAERwM,EAFQ,OAGdC,GAAgBD,GAHF,2CAAH,qDAUb,OAJA/M,qBAAU,WACRiN,OACC,IAGD,kBAAC,KAAD,CAAM7J,OAAK,GACRoN,GAAa,kBAAC,IAAD,CAAUnM,GAAI+L,EAASiB,WACrC,kBAAC,KAAK/G,QAAN,KACG/I,EAAKsI,WAAL,OAAiB/J,QAAjB,IAAiBA,OAAjB,EAAiBA,EAAMgF,KACtB,kBAAC,IAAD,CAAQ2I,QAAQ,SACd,kBAAC,IAAD,CAAUA,QAAQ,QAAQC,KAAK,QAC7B,kBAAC,IAASC,KAAV,KACE,kBAAC,IAAS3G,KAAV,CACE4E,KAAK,SACLzH,QAAS,kBAAM+M,GAAW3P,EAAKuD,OAEjC,kBAAC,IAASkC,KAAV,CAAe4E,KAAK,QAClB,kBAAC,EAAD,CACEK,WAAYA,EACZnH,GAAIvD,EAAKuD,GACT+B,MAAOtF,EAAKsF,MACZnF,KAAMH,EAAKmJ,cAOvB,kBAAC,KAAD,CAAO+C,QAAQ,QAAQmB,KAAK,OAAOlH,IAAKmB,KACxC,kBAAC,KAAKqB,OAAN,KAAcrD,GACd,kBAAC,KAAK+G,KAAN,KACGb,GACC,kBAAC,gBAAD,CAAe1I,GAAE,gBAAW0I,GAAajI,KACvC,kBAAC4B,EAAA,EAAIC,KAAL,WAAcoG,GAAanM,WAG7B,IAGJ,kBAAC,KAAKgN,KAAN,KAAYlB,EAAY4E,kBACxB,kBAAC,KAAKpD,YAAN,KACE,kBAAC,IAAD,CACEtC,KAAMrK,EAAKmJ,QACXyD,IAAK,IACLtG,IAAK,IACLuG,MAAO,IACPC,aAAa,gBAKnB,kBAAC,KAAK/D,QAAN,CACEiH,OAAK,EACLjP,MAAO,CAAEC,QAAS,OAAQiP,gBAAiB,kBAE3C,kBAAC,KAAKtD,YAAN,CAAkB5L,MAAO,CAAEwN,YAAa,QACrC,kBAAC,IAAD,CAAQ3F,GAAG,MAAMqE,cAAc,QAC5B,kBAACiD,GAAA,EAAD,CAAOtH,GAAG,IAAIuH,OAAK,EAACC,SAAS,SAC1BxF,EAAMrE,QAET,kBAAC,IAAD,CAAQxF,MAAOkK,EAAU,CAACxJ,MAAM,WAAa,CAACA,MAAM,SAAUmB,QAAS,kBAAM4M,MAAY/N,MAAM,QAAQ0K,MAAI,GACzG,kBAACkE,GAAA,EAAD,CAAM1K,KAAK,UACVsF,EAAU,QAAU,UAK7B,kBAAC,KAAK0B,YAAN,MAGA,kBAAC,KAAKA,YAAN,CAAkB/J,QAAS,kBAAMiJ,MAC/B,kBAAC,IAAD,CAAQpK,MAAM,QAAQ6O,UAAQ,GAC5B,kBAAC,IAAOvH,QAAR,CAAgBhI,MAAO,CAACU,MAAM,SAAU8O,SAAO,GAA/C,YACA,kBAAC,IAAOxH,QAAR,CAAgByH,QAAM,GACpB,kBAACH,GAAA,EAAD,CAAM1K,KAAK,oBAMnB,kBAAC,KAAKoD,QAAN,CAAciH,OAAK,GACjB,kBAACtH,EAAA,EAAQzG,MAAT,KACG8I,GAAqB,kBAAC,EAAD,CAAa/K,KAAMmI,IACzC,kBAAC,IAAD,CAAMsI,OAAK,GACT,kBAAC,IAAKzG,SAAN,CAAe5I,MAAO,GAAIiB,SAxGR,SAACC,GAC3B,IAAM0K,EAAiB1K,EAAEC,OAAOrD,MAChCoM,GAAe0B,MAuGP,kBAAC,IAAD,CACEpK,QAAS,kBAAMkJ,MACf3C,QAAQ,YACR8D,cAAc,OACdd,KAAK,OACLuE,WAAS,SCnKRC,OAtDf,WAAoB,IAAD,EACSrS,mBAAS,IADlB,mBACVsS,EADU,KACHC,EADG,KAETtS,EAASoB,qBAAWzB,GAApBK,KAFS,EAGuBD,mBAAS,MAHhC,mBAGImN,GAHJ,WAKXC,EAAO,uCAAG,8BAAA3L,EAAA,sEACInB,MAAM,SAAD,OAAUL,EAAKgF,KADxB,cACRC,EADQ,gBAEaA,EAAIxE,OAFjB,OAERwM,EAFQ,OAGdC,EAAgBD,GAHF,2CAAH,qDAmBb,OAbA/M,qBAAU,WACRiN,MACC,IAEHjN,qBAAU,YACK,uCAAG,8BAAAsB,EAAA,sEACInB,MAAM,eAAD,OAAgBL,EAAKgF,KAD9B,cACRzE,EADQ,gBAESA,EAAIE,OAFb,cAER8R,EAFQ,yBAGPD,EAASC,IAHF,2CAAH,qDAKbpD,KACC,CAACnP,IAGF,oCACGA,EACC,6BACE,kBAACoF,EAAA,EAAD,KACE,4BAAKpF,EAAKc,WAEZ,yBAAK0B,MAAO,CAAEK,MAAO,MAAO2P,OAAQ,WAClC,kBAAC,KAAK9O,MAAN,KACG2O,EAAMrL,KAAI,SAACzG,EAAK2H,GAAN,OACT,kBAAC,GAAD,CAAMf,IAAK5G,EAAIwG,MAAQmB,EAAGzG,KAAMlB,UAMxC,6BACE,kBAACgJ,EAAA,EAAD,CACE/G,MAAO,CAAEC,QAAS,OAAQ+G,WAAY,UACtCC,eAAa,EACbC,QAAM,GAHR,sBCsBK+I,OApEf,WAAiB,IAAD,EACkB1S,mBAAS,IAD3B,mBACGkP,GADH,WAENjK,EAAOkK,cAAPlK,GAyCR,OAvCA9E,qBAAU,YACK,uCAAG,8BAAAsB,EAAA,sEACInB,MAAM,UAAD,OAAW2E,IADpB,cACRC,EADQ,gBAEKA,EAAIxE,OAFT,cAERgB,EAFQ,yBAGPwN,EAAYxN,IAHL,2CAAH,qDAKb0N,KACC,CAACnK,IAiCF,kBAACkC,EAAA,EAAD,CACE1E,MAAO,CACLK,MAAO,MACP4K,WAAY,MACZ9K,UAAW,OACXG,OAAQ,kBACR4C,QAAS,OACTgI,UAAW,oBAGb,kBAACxG,EAAA,EAAKS,MAAN,CAAYC,IAAI,6DAChB,kBAACV,EAAA,EAAKsD,QAAN,KACE,kBAACtD,EAAA,EAAKkD,OAAN,CAAaC,GAAG,KAAhB,sBACA,kBAACnD,EAAA,EAAKkH,YAAN,oBACA,kBAAClH,EAAA,EAAKsH,MAAN,KACE,4BAAQ5K,KAAK,SAAS8O,MAAM,kBAAkBrO,QA9CnC,WACjBhE,MAAM,UAAD,OAAW2E,GAAM,CACpBtD,OAAQ,SACRC,QAAS,CACP,eAAgB,wBA0Cd,cCnBKgR,OAtCf,WAAsB,IACZ3N,EAAOkK,cAAPlK,GADW,EAEKjF,mBAAS,IAFd,mBAEZC,EAFY,KAENC,EAFM,OAGOF,mBAAS,IAHhB,mBAGZsS,EAHY,KAGLC,EAHK,KAKbnF,EAAO,uCAAG,8BAAA3L,EAAA,sEACInB,MAAM,SAAD,OAAU2E,IADnB,cACRC,EADQ,gBAEKA,EAAIxE,OAFT,OAERgB,EAFQ,OAGdxB,EAAQwB,GAHM,2CAAH,qDAMPmR,EAAQ,uCAAG,8BAAApR,EAAA,sEACGnB,MAAM,eAAD,OAAgB2E,IADxB,cACTC,EADS,gBAEIA,EAAIxE,OAFR,OAETgB,EAFS,OAGf6Q,EAAS7Q,GAHM,2CAAH,qDAWd,OALAvB,qBAAU,WACRiN,IACAyF,MACC,IAGD,6BACE,kBAACxN,EAAA,EAAD,KACE,4BAAKpF,EAAKc,WAEZ,yBAAK0B,MAAO,CAAEK,MAAO,MAAO2P,OAAQ,WAClC,kBAACtL,EAAA,EAAKxD,MAAN,KACG2O,EAAMrL,KAAI,SAACzG,EAAK2H,GAAN,OACT,kBAAC,GAAD,CAAMf,IAAKe,EAAGzG,KAAMlB,W,kDCmEjBsS,GAhGG,WAAO,IAAD,EACI9S,mBAAS,IADb,mBACfsS,EADe,KACRC,EADQ,OAEYvS,mBAAS,IAFrB,mBAEfkH,EAFe,KAEJoI,EAFI,OAGctP,mBAAS,IAHvB,mBAGf+S,EAHe,KAGHC,EAHG,OAIQhT,oBAAS,GAJjB,mBAINoM,GAJM,aAKD+C,cAAbtL,EALc,EAKdA,KAAMoB,EALQ,EAKRA,GAmCd,OAjCA9E,qBAAU,WACR,IAAM0S,EAAQ,uCAAG,kCAAApR,EAAA,yDACF,WAAToC,EADW,iCAEKvD,MAAM,oBAAD,OAAqB2E,IAF/B,cAEPC,EAFO,gBAGUA,EAAIxE,OAHd,OAGPuJ,EAHO,OAIb7H,QAAQC,IAAI4H,EAAU,UACtBsI,EAAStI,GALI,yCAOK3J,MAAM,4BAAD,OAA6B2E,IAPvC,eAOPC,EAPO,iBAQUA,EAAIxE,OARd,QAQPuJ,EARO,OASb7H,QAAQC,IAAI4H,EAAU,WACtBsI,EAAStI,GAVI,4CAAH,qDAcRgJ,EAAa,uCAAG,8BAAAxR,EAAA,sEACFnB,MAAM,eAAD,OAAgB2E,IADnB,cACdC,EADc,gBAEFA,EAAIxE,OAFF,OAEdF,EAFc,OAIpBwS,EAAcxS,GAJM,2CAAH,qDAOb0S,EAAY,uCAAG,8BAAAzR,EAAA,sEACDnB,MAAM,gBAAD,OAAiB2E,IADrB,cACbC,EADa,gBAEDA,EAAIxE,OAFH,OAEbF,EAFa,OAGnB8O,EAAa9O,GAHM,2CAAH,qDAMlByS,IACAC,IACAL,MACC,CAAC5N,IAGF,6BACE,kBAACI,EAAA,EAAD,KACE,kBAAC8N,GAAA,EAAKC,MAAN,KACE,kBAACD,GAAA,EAAKvB,MAAN,CAAYnP,MAAO,CAACK,MAAM,QAASuQ,MAAK,2CAAsCnM,EAAUO,OAAhD,YAA0DP,EAAUK,KAApE,WAE1C,4BAAKL,EAAUiJ,cACf,2BAAIjJ,EAAUkJ,WAEhB,kBAACkD,GAAA,EAAD,CACEC,iBAAiB,WACjBC,YAAY,EACZvO,GAAG,sBAEH,kBAACwO,GAAA,EAAD,CAAKC,SAAS,WAAW1M,MAAM,YAC7B,6BACA,yBAAKvE,MAAO,CAAEK,MAAO,MAAO2P,OAAQ,WAClC,kBAAC,KAAK9O,MAAN,KACE,kBAAC,EAAD,CAAcyI,WAAYA,EAAYnH,GAAIA,IACzC0O,MAAMC,QAAQtB,IACbA,EAAMrL,KAAI,SAACzG,EAAK2H,GAAN,OAAY,kBAAC,GAAD,CAAMf,IAAKe,EAAGzG,KAAMlB,UAIlD,kBAACiT,GAAA,EAAD,CAAKC,SAAS,QAAQ1M,MAAM,SAC1B,kBAAC,KAAD,CAASvE,MAAO,CAACG,UAAU,SACzB,kBAAC,KAAQyH,OAAT,iBACA,2BAAInD,EAAU2M,eAGlB,kBAACJ,GAAA,EAAD,CAAKC,SAAS,SAAS1M,MAAM,UACzB,kBAAC,KAAD,CAASvE,MAAO,CAACG,UAAU,SACzB,kBAAC,KAAQyH,OAAT,qCACE,kBAAC,KAAQyJ,KAAT,KACGf,EAAW9L,KAAI,SAAC8M,EAAW5L,GAAZ,OACd,kBAAC,KAAQhB,KAAT,CAAcC,IAAKe,GACjB,kBAACgL,GAAA,EAAKC,MAAN,KACE,kBAACD,GAAA,EAAKvB,MAAN,CAAYnP,MAAO,CAACK,MAAM,QAASuQ,MAAK,2CAAsCU,EAAUtM,OAAhD,YAA0DsM,EAAUxM,KAApE,UACxC,kBAAC4L,GAAA,EAAK1I,QAAN,KACE,kBAAC0I,GAAA,EAAKa,QAAN,CACEnJ,QAASkJ,EAAUhT,uB,+EC3DhCkT,GAzBC,SAAClJ,GACf,OACE,kBAACX,EAAA,EAAD,KACE,kBAACA,EAAA,EAAQI,OAAT,CACEF,GAAG,IACHzC,IAAG,2CAAsCkD,EAAMtD,OAA5C,YAAsDsD,EAAMxD,KAA5D,UAEL,kBAAC6C,EAAA,EAAQK,QAAT,KACE,kBAACL,EAAA,EAAQM,OAAT,KAAiBK,EAAM+F,QACvB,kBAAC1G,EAAA,EAAQO,SAAT,KACE,6BAAMI,EAAMmJ,QACXnJ,EAAMoJ,WACL,yBACE1R,MAAO,CAAEU,MAAO,QADlB,UAEK4H,EAAM+F,OAFX,2BAKJ,kBAAC1G,EAAA,EAAQvE,KAAT,KACE,2BAAIkF,EAAMqJ,a,qBCyRLC,GApRF,WAAO,IACVpU,EAASoB,qBAAWzB,GAApBK,KADS,EAEaD,mBAAS,IAFtB,mBAEVoU,EAFU,KAEDE,EAFC,OAGWtU,qBAHX,mBAGVuU,EAHU,KAGFC,EAHE,OAIaxU,mBAAS,IAJtB,mBAIVyU,EAJU,KAIDC,EAJC,OAKa1U,mBAAS,IALtB,mBAKV2U,EALU,KAKDC,EALC,OAMqB5U,mBAAS,IAN9B,mBAMV6U,EANU,KAMGC,EANH,OAOiB9U,oBAAS,GAP1B,gCAQeA,oBAAS,IARxB,mBAQV+U,EARU,KAQAC,EARA,OASmBhV,mBAAS,GAT5B,mBASViV,EATU,KASEC,EATF,KAWXC,EAAYC,mBASZC,EAAU,WACd,IAAMC,EAAM,IAAIxI,KAeVyI,EAdS,CACb,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAEmBD,EAAItH,YACnBwH,EAAMF,EAAIrH,UACVwH,EAAOH,EAAIpH,cACXwH,EAAI,UAAMJ,EAAInH,WAAV,YAAwBmH,EAAIlH,cAChCuH,EAAQL,EAAInH,YAAc,GAAK,KAAO,KAC5C,MAAM,GAAN,OAAUoH,EAAV,YAAmBC,EAAnB,aAA2BC,EAA3B,cAAqCC,EAArC,YAA6CC,IA8C/CxV,qBAAU,WACRgV,EAAUS,QAAUC,KAAGC,QAAQ,KAC/BX,EAAUS,QAAQG,GAAG,WAAW,SAAC9Q,GAAD,OAAQuP,EAAUvP,MAClDkQ,EAAUS,QAAQG,GAAG,WAAW,SAAC3B,GAAD,OA5EV,SAACA,GACvBM,GAAW,SAACsB,GAAD,6BAAiBA,GAAjB,CAA0B5B,OACrCc,GAAc,SAACe,GAAD,OAAcA,EAAW,KA0EMC,CAAgB9B,MAC7De,EAAUS,QAAQG,GAAG,UAAU,SAAC7L,GAAD,OAAW4K,EAAe5K,QACxD,IAGH/J,qBAAU,WACR,GAAIC,SAAS+V,eAAe,WAAY,CACtC,IAAMC,EAAUhW,SAAS+V,eAAe,WACxCC,EAAQC,UAAYD,EAAQE,iBAIhC,IAAMC,EAAQ,CACZ,CACEC,SAAU,CAAEpP,IAAK,QAASyG,KAAM,QAAShD,QAAS,gBAClD4L,OAAQ,WACN,OAAO5B,EAAY5N,KAAI,SAAChH,EAAMiQ,GAC5B,GAAIjQ,EAAKyW,WAAanC,EACpB,OACE,kBAACnK,EAAA,EAAD,CACE3H,MAAO,CAAEiL,WAAY,OAAQ9K,UAAW,QACxCwE,IAAK8I,EACL5L,QAAS,WAhDrBsQ,EAiD4B3U,KAGhB,kBAACmK,EAAA,EAAQI,OAAT,CACE/H,MAAO,CAAEK,MAAO,OAAQ2C,OAAQ,QAChCoC,IAAG,2CAAsC5H,EAAKwH,OAA3C,YAAqDxH,EAAKsH,KAA1D,UAEL,kBAAC6C,EAAA,EAAQK,QAAT,KACE,kBAACL,EAAA,EAAQM,OAAT,CAAgBJ,GAAG,KAAKrK,EAAKc,iBAQ3C,CACEyV,SACE,kBAAC1I,GAAA,EAAK3G,KAAN,CAAW7C,QAAS,kBAAM4Q,EAAc,IAAI9N,IAAI,YAAhD,WACU,kBAACwK,GAAA,EAAD,KAAQqD,IAGpBwB,OAAQ,WACN,OACE,yBAAKhU,MAAO,CAAEC,QAAS,OAAQC,eAAgB,WAC7C,kBAACyH,EAAA,EAAQzG,MAAT,CACEoL,KAAK,QACL9J,GAAG,UACHxC,MAAO,CACLG,UAAW,OACX+T,SAAU,OACVlR,OAAQ,QACR1C,OAAQ,oBACRD,MAAO,OACP6C,QAAS,SAGV8O,EAAQxN,KAAI,SAACmN,EAASlE,GACrB,OAAIkE,EAAQsC,WAAanC,EAErB,kBAAC,GAAD,CACEnN,IAAK8I,EACLiE,WAAW,EACXC,QAASA,EAAQvS,KACjBiP,OAAQsD,EAAQrT,SAChBmT,OAAQE,EAAQF,OAChBzM,OAAQ2M,EAAQ3M,OAChBF,KAAM6M,EAAQ7M,KACdgN,OAAQA,EACRI,QAASA,IAKb,kBAAC,GAAD,CACEvN,IAAK8I,EACLiE,WAAW,EACXC,QAASA,EAAQvS,KACjBiP,OAAQsD,EAAQrT,SAChBmT,OAAQE,EAAQF,OAChBzM,OAAQ2M,EAAQ3M,OAChBF,KAAM6M,EAAQ7M,KACdgN,OAAQA,EACRI,QAASA,YAW3B,OACE,6BACE,kBAACzO,EAAA,EAAD,CAAQG,OAAO,MACb,kBAAC,KAAD,KACE,kBAACgE,EAAA,EAAD,CAAQC,GAAG,KAAK7H,MAAO,CAAEU,MAAOtC,IAC9B,kBAACkR,GAAA,EAAD,CAAM1K,KAAK,WAAW5E,MAAO,CAAEU,MAAOtC,KACtC,kBAACwJ,EAAA,EAAOI,QAAR,0BAIN,kBAACvE,EAAA,EAAD,CAAQG,OAAO,MACb,kBAAC,KAAD,KACE,kBAACuQ,GAAA,EAAD,CACExP,IAAI,UACJyP,UAAU,QACVC,QACE,kBAACC,GAAA,EAAD,CAAS9R,GAAE,iBAAX,gDAKF,kBAAC+R,GAAA,EAAD,CACEC,QAAM,EACNlT,SAAU,WACRgR,GAjIZI,EAAUS,QAAQsB,KAAK,cACvBlC,GAAY,IAfG,SAAC/P,GAChB,IAAMkS,EAAU,CACdT,SAAUzR,EACV6K,OAAQ7P,EAAKgF,GACblE,SAAUd,EAAKc,SACfwG,KAAMtH,EAAKsH,KACXE,OAAQxH,EAAKwH,QAEf0N,EAAUS,QAAQsB,KAAK,SAAUC,GACjCnC,GAAY,GAsIyBoC,CAAS7C,IAEpCzQ,MAAOiR,EAAW,SAAW,aAEf,IAClB,6BACGJ,EAAQ+B,UACP,kBAAC,IAAD,CACEpS,QAAS,WACPsQ,EAAW,KAEb/J,QAAQ,kBAGX8J,EAAQ+B,UACP,kBAACtM,EAAA,EAAD,CACE3H,MAAO,CAAEiL,WAAY,OAAQ9K,UAAW,QACxCwE,IAAI,WAEJ,kBAACgD,EAAA,EAAQI,OAAT,CACE/H,MAAO,CAAEK,MAAO,OAAQ2C,OAAQ,QAChCoC,IAAG,2CAAsC8M,EAAQlN,OAA9C,YAAwDkN,EAAQpN,KAAhE,UAEL,kBAAC6C,EAAA,EAAQK,QAAT,0BAEE,kBAACL,EAAA,EAAQM,OAAT,CAAgBJ,GAAG,KAAnB,WAA4BqK,EAAQ5T,gBAOhD,kBAAC,KAAD,CAAKwV,MAAOA,IACZ,kBAACrQ,EAAA,EAAD,CACE4I,MAAM,SACNzI,OAAO,KACP5D,MAAO,CACL2D,gBAAiBvF,EACjB6B,QAAS,OACTC,eAAgB,WAGlB,kBAAC,KAAD,KACE,yBACEF,MAAO,CAAEC,QAAS,OAAQC,eAAgB,SAAUG,MAAO,SAE3D,kBAAC,KAAD,CACElC,MAAOwT,EACPrQ,SAzMS,SAACC,GACpBsQ,EAAWtQ,EAAEC,OAAOrD,QAyMV6B,MAAO,CAAEK,MAAO,OAAQ2C,OAAQ,OAAQ4R,SAAU,UAEpD,kBAAC,IAAD,CACE/S,QAAS,YA1ND,WAClB,IAAMgT,EAAgB,CACpBzV,KAAMuS,EACNnP,GAAIsP,EACJxT,SAAUd,EAAKc,SACfwG,KAAMtH,EAAKsH,KACXE,OAAQxH,EAAKwH,OACbyM,OAAQmB,IACRqB,SAAU/B,EAAQ+B,UAEpBvB,EAAUS,QAAQsB,KAAK,eAAgBI,GAiN3BC,GACAjD,EAAW,KAEbzJ,QAAQ,c,kBC3FP2M,GA/LS,WACLnW,qBAAWzB,GAApBK,KADqB,IAAD,EAWAD,mBATJ,CACtByX,cAAe,GACfC,YAAa,GACbtH,SAAU,GACVyD,YAAa,GACbtM,KAAM,YACNE,OAAQ,cARkB,mBAWrBkQ,EAXqB,KAWbC,EAXa,OAYA5X,mBAAS,IAZT,mBAYrB6X,EAZqB,KAYbC,EAZa,OAaM9X,oBAAS,GAbf,mBAarB+X,EAbqB,KAaVC,EAbU,KAetBC,EAAe,SAACjU,GAAO,IAAD,EACFA,EAAEC,OAAlBoD,EADkB,EAClBA,KAAMzG,EADY,EACZA,MACRsX,EAAkB,6BACnBP,GADmB,mBAErBtQ,EAAOzG,IAEVgX,EAAUM,IAoBZ,IAAMC,EAAY,uCAAG,WAAOnU,GAAP,mBAAAvC,EAAA,yDACnBuC,EAAEO,mBACIsT,EAASzO,EAAeuO,IACnB1P,OAHQ,yCAGOjG,EAAK6V,IAHZ,cAKbO,EALa,gBAKQT,GALR,SAMGrX,MAAM,eAAgB,CAC1CqB,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUqW,KATJ,cAMbC,EANa,iBAWKA,EAAQ3X,OAXb,eAYnBsX,GAAa,GAZM,4CAAH,sDAelB,SAAS5O,EAAT,GAAmE,IAAzCqO,EAAwC,EAAxCA,cAAeC,EAAyB,EAAzBA,YACjCG,GAD0D,EAAZzH,SACrC,IAmBf,OAlBKqH,GACHI,EAAOS,KAAK,iCAGTZ,GACHG,EAAOS,KAAK,mDAIV,OAAOpP,KAAKuO,IACdI,EAAOS,KACL,uEAIAZ,EAAYzP,OAAS,IACvB4P,EAAOS,KAAK,yDAEPT,EAGT,SAAS7V,EAAKuW,GACZT,EAAUS,GACV/V,YAAW,WACTsV,EAAU,MACT,KAnFuB,IAuF1BL,EAMEE,EANFF,cACAC,EAKEC,EALFD,YACAtH,EAIEuH,EAJFvH,SACAyD,EAGE8D,EAHF9D,YACApM,EAEEkQ,EAFFlQ,OACAF,EACEoQ,EADFpQ,KAGF,OACE,yBAAK9E,MAAO,CAAEC,QAAS,OAAQC,eAAgB,SAAUC,UAAW,SAClE,kBAACC,EAAA,EAAD,CAAMJ,MAAO,CAAEK,MAAO,QAASC,OAAQ,QACrC,kBAACF,EAAA,EAAKG,KAAN,KACE,kBAACH,EAAA,EAAKI,MAAN,CAAYR,MAAO,CAAES,UAAW,WAC9B,mDAEF,kBAACI,EAAA,EAAD,CACEb,MAAO,CAAEG,UAAW,QACpBS,UAAU,4BACVE,MAAM,MAGZ,kBAACC,EAAA,EAAD,CAAMyF,SAAUkP,GACd,kBAAC,EAAD,CACE5Q,KAAMA,EACNE,OAAQA,EACRD,QAvFR,SAAuB5G,GACrB,IAAMsX,EAAkB,6BACnBP,GADmB,IAEtBpQ,KAAM3G,IAERgX,EAAUM,IAmFJxQ,UAhFR,SAAuB9G,GACrB,IAAMsX,EAAkB,6BACnBP,GADmB,IAEtBlQ,OAAQ7G,IAEVgX,EAAUM,MA6EN,6BACE,kBAAC1U,EAAA,EAAKG,MAAN,KACE,kBAACC,EAAA,EAAD,CACEyD,KAAK,gBACLzG,MAAO6W,EACP1T,SAAUkU,EACVpU,KAAK,OACLC,MAAM,iBACNwF,OAAO,gEAIb,6BACE,kBAAC9F,EAAA,EAAKG,MAAN,KACE,kBAACC,EAAA,EAAD,CACEyD,KAAK,cACLzG,MAAO8W,EACP3T,SAAUkU,EACVpU,KAAK,OACLC,MAAM,eACNwF,OAAO,uCAIb,6BACE,kBAAC9F,EAAA,EAAKG,MAAN,KACE,kBAACC,EAAA,EAAD,CACEyD,KAAK,WACLzG,MAAOwP,EACPrM,SAAUkU,EACVpU,KAAK,OACLC,MAAM,WACNwF,OAAO,qEAIb,6BACE,kBAAC9F,EAAA,EAAKG,MAAN,KACF,kBAAC+H,EAAA,EAAD,CACErE,KAAK,cACLzG,MAAOiT,EACP9P,SAAUkU,EACVnU,MAAM,cACNwF,OAAO,kDAIT,oCACE,uDACA,4BACE,2EACA,8FAGA,qGAKDuO,EAAO5P,QACR4P,EAAO5Q,KAAI,SAAC9E,GAAD,OACT,kBAACsB,EAAA,EAAD,CAAOC,QAAQ,UAAU0D,IAAKjF,GAC3BA,MAGP,kBAACkC,EAAA,EAAD,CAAQR,KAAK,UAAb,qBAEDkU,GAAa,kBAAC,IAAD,CAAUvT,GAAG,WCxHlBgU,GAvDH,WACV,OACE,kBAAC,gBAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAAC,EAAD,KACE,6BACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,aACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,UACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,mBACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,WACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,WACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,YACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,aACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,SACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,gBACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,aACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,SACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,qBACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,KACV,kBAAC,EAAD,aC1DVC,GAAOvY,SAAS+V,eAAe,QAErCyC,IAASnC,OACP,kBAAC,IAAMoC,WAAP,KACE,kBAAC,GAAD,OAEFF,M","file":"static/js/main.ee897318.chunk.js","sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\n\nexport const UserContext = createContext({});\n\nexport const UserProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    document.cookie\n      ? fetch(\"/user\")\n          .then((res) => {\n            if (res.status === 200) return res.json();\n            return null;\n          })\n          .then((json) => setUser(json))\n      : setUser(null);\n  }, [setUser]);\n  return (\n    <UserContext.Provider value={{ user, setUser }}>\n      {children}\n    </UserContext.Provider>\n  );\n};\n","export const colorPallet = {\n  lightMarvel: \"#85D7FF\",\n  marvel: \"#1FB6FF\", // buttons\n  darkMarvel: \"#009EEB\",\n};\n","import React, { useState, useContext } from \"react\";\nimport { UserContext } from \"../contexts/userContext\";\nimport { Alert, Form, Button, Container, Card } from \"react-bootstrap\";\nimport { Redirect } from \"react-router-dom\";\nimport { Input } from \"@gympass/yoga\";\nimport { colorPallet } from \"./Theme\";\n\nconst Login = () => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const { user, setUser } = useContext(UserContext);\n  const [alert, setAlert] = useState(null);\n\n  const sendCredentials = async (username, password) => {\n    const data = { username: username, password: password };\n    fetch(\"/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    })\n      .then((res) => {\n        if (res.status === 200) return res.json();\n        warn(\"Invalid Username/Password\");\n        throw Error(\"Invalid Username/Password\");\n      })\n      .then((json) => setUser(json))\n      .catch((err) => console.log(err));\n  };\n\n  function submitForm(e) {\n    e.preventDefault();\n    sendCredentials(username, password);\n    setIsSubmitted(true);\n  }\n\n  function redirectToFeed() {\n    if (user) {\n      return <Redirect to=\"/spaces\" />;\n    }\n  }\n\n  function warn(warningText) {\n    setAlert(warningText);\n    window.setTimeout(() => {\n      setAlert(null);\n    }, 5000);\n  }\n\n  return (\n    <div\n      style={{ display: \"flex\", justifyContent: \"center\", marginTop: \"10px\" }}\n    >\n      <Card style={{ width: \"25rem\", border: \"0px\" }}>\n        <Card.Body>\n          <Card.Title style={{ textAlign: \"center\" }}>\n            <h1>S A F E S P A C E</h1>\n          </Card.Title>\n          <Card.Title\n            style={{ textAlign: \"center\", color: colorPallet.darkMarvel }}\n          >\n            Log In\n          </Card.Title>\n          <Card.Subtitle\n            style={{ textAlign: \"center\", color: colorPallet.lightMarvel }}\n            className=\"mb-2\"\n          >\n            Welcome Back!\n          </Card.Subtitle>\n          <Container\n            style={{ marginTop: \"25px\" }}\n            className=\"justify-content-md-center\"\n            fluid=\"lg\"\n          >\n            <Form>\n              {alert && <Alert variant=\"warning\">{alert}</Alert>}\n              <div>\n                <Form.Group>\n                  <Input\n                    style={{ width: \"100%\" }}\n                    type=\"text\"\n                    label=\"Username\"\n                    value={username}\n                    onChange={(e) => setUsername(e.target.value)}\n                    onClean={(cleaned) => setUsername(cleaned)}\n                  />\n                </Form.Group>\n              </div>\n              <div>\n                <Form.Group controlId=\"formBasicPassword\">\n                  <Input\n                    style={{ width: \"100%\" }}\n                    type=\"password\"\n                    label=\"Password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                    onClean={(cleaned) => setPassword(cleaned)}\n                  />\n                </Form.Group>\n              </div>\n              <div style={{ textAlign: \"center\" }}>\n                <Button onClick={submitForm} variant=\"primary\">\n                  Log In\n                </Button>\n              </div>\n            </Form>\n          </Container>\n        </Card.Body>\n      </Card>\n      {isSubmitted ? redirectToFeed() : \"\"}\n    </div>\n  );\n};\n\nexport default Login;\n","import React, { useContext, useEffect, useState } from 'react'\nimport { UserContext } from '../contexts/userContext'\nimport { Jumbotron, Button, Card } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useSpring, animated } from 'react-spring'\n\n\nconst Landing = () => {\n  const { user } = useContext(UserContext);\n  const [communities, setCommunities] = useState(null);\n\n  const fadeInLeft = useSpring({\n    from: {\n      opacity:0,\n      marginTop: '-150px'\n    },\n    opacity: 1,\n    color:'white',\n    marginTop:'0px'\n  })\n\n  const fadeInUp = useSpring({\n    from: {\n      opacity:0,\n      marginTop: '150px'\n    },\n    opacity: 1,\n    marginTop:'0px'\n  })\n\n\n\n\n  useEffect(() => {\n    const getCommunities = async () => {\n      if (user) {\n        const req = await fetch(`/communitiesByUser/${user.id}`);\n        const list = await req.json();\n        return list;\n      }\n    };\n    getCommunities().then((list) => {\n      setCommunities(list);\n    });\n  }, [user]);\n\n\n  const JumbotronStyle = {\n    background:\n      'linear-gradient( rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7) ), url(\"https://img.rawpixel.com/s3fs-private/rawpixel_images/website_content/v211batch11-aum-561-cummunity_2.jpg?w=1200&dpr=1&fit=default&crop=default&q=65&vib=3&con=3&usm=15&bg=F4F4F3&ixlib=js-2.2.1&s=f0977b16acfb162ea9b439acec79e19e\")',\n    backgroundPosition: \"center 35%\",\n    backgroundSize: \"cover\",\n    height: \"350px\",\n    borderRadius: \"0px\",\n  };\n\n  return (\n    <div>\n      <Jumbotron style={JumbotronStyle}>\n        <div style={{ display: 'flex', justifyContent: 'center' }}>\n          <div style={{ textAlign: 'center', border: '7px solid white', padding: '15px' }}>\n            <animated.div style={fadeInLeft}>\n              <h1>Welcome to Safespace</h1>\n            </animated.div>\n            <p style={{ color: 'white' }}>\n              <span className=\"text-wrapper\">\n                This is a safe space for anyone to create a community around their personal experiences, whatever that may be.\n              </span>\n            </p>\n          </div>\n        </div>\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n          { !user && <LinkContainer to=\"/register\" style={{ marginTop: \"18px\" }}>\n            <Button className=\"marvel-btn\">Create An Account</Button>\n          </LinkContainer>}\n        </div>\n      </Jumbotron>\n      <animated.div style={fadeInUp}>\n        <div style={{ display: 'flex', justifyContent: 'center' }}>\n          <Card style={{ border: '0px', width: '75%' }} className='text-center'>\n            <Card.Body>\n              <Card.Title>Create Your Own Community</Card.Title>\n              <Card.Text>\n\n                  Create a space for yourself and others to gather around a shared experiences and provide support and motivation for one another.\n\n              </Card.Text>\n              <LinkContainer to='/create-community'>\n                <Button variant='primary'>Create a Community</Button>\n              </LinkContainer>\n            </Card.Body>\n          </Card>\n        </div>\n      </animated.div>\n      <animated.div style={fadeInUp}>\n      <div style={{ display: 'flex', justifyContent: 'center' }}>\n        <Card style={{ border: '0px', width: '75%' }} className='text-center'>\n          <Card.Body>\n            <Card.Title>Find Mentorship</Card.Title>\n            <Card.Text>\n              Communicate with others and learn better ways to to cope from people who have dealt with and have overcamed the same experiences as you.\n            </Card.Text>\n            <LinkContainer to='/chat'>\n              <Button variant=\"primary\">Find a Mentor</Button>\n            </LinkContainer>\n          </Card.Body>\n        </Card>\n      </div>\n      </animated.div>\n      <animated.div style={fadeInUp}>\n      <div style={{ display: 'flex', justifyContent: 'center' }}>\n        <Card style={{ border: '0px', width: '75%' }} className='text-center'>\n          <Card.Body>\n            <Card.Title>Tell Your Story</Card.Title>\n            <Card.Text>\n              Have a space to tell your story and to be heard.\n            </Card.Text>\n            <LinkContainer to='/spaces'>\n            <Button variant=\"primary\">Browse Communites</Button>\n            </LinkContainer>\n          </Card.Body>\n        </Card>\n      </div>\n      </animated.div>\n    </div>\n  );\n};\n\nexport default Landing;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { UserContext } from \"../contexts/userContext\";\nimport { Navbar, Nav, NavDropdown } from \"react-bootstrap\";\nimport { Redirect } from \"react-router-dom\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { colorPallet } from \"./Theme\";\n\nconst NavBar = () => {\n  const { user, setUser } = useContext(UserContext);\n  const [communities, setCommunities] = useState(null);\n  const [loggedOut, setLoggedOut] = useState(false);\n\n  useEffect(() => {\n    const getCommunities = async () => {\n      if (user) {\n        const req = await fetch(`/communitiesByUser/${user.id}`);\n        const list = await req.json();\n        return list;\n      }\n    };\n    getCommunities().then((list) => {\n      setCommunities(list);\n    });\n  }, [user, setCommunities]);\n\n  useEffect(() => {\n    if (loggedOut) {\n      fetch(\"/logout\")\n        .then(() => setUser(null))\n        .then(() => setLoggedOut(true));\n    }\n  }, [loggedOut]);\n\n  return (\n    <Navbar\n      sticky=\"top\"\n      style={{ backgroundColor: colorPallet.marvel }}\n      expand=\"lg\"\n    >\n      <LinkContainer style={{ color: \"white\" }} to=\"/\">\n        <Navbar.Brand\n          style={{\n            backgroundColor: \"white\",\n            fontFamily: \"arial\",\n            fontWeight: \"700\",\n            fontStyle: \"normal\",\n          }}\n        >\n          <i className=\"fas fa-feather-alt\" /> SAFESPACE\n        </Navbar.Brand>\n      </LinkContainer>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\" />\n        <Nav>\n          {user && communities != null ? (\n            <>\n              <LinkContainer style={{ color: \"white\" }} to=\"/account\">\n                <Nav.Link>My Account</Nav.Link>\n              </LinkContainer>\n\n              <NavDropdown\n                title=\"Newsfeeds\"\n                style={{ color: \"white\" }}\n                id=\"basic-nav-dropdown\"\n              >\n                {communities.map((community) => {\n                  return (\n                    <NavDropdown.Item\n                      style={{ color: \"white\" }}\n                      key={community.name}\n                    >\n                      <LinkContainer to={`/news/member/${community.id}`}>\n                        <Nav.Link>{community.name}</Nav.Link>\n                      </LinkContainer>\n                    </NavDropdown.Item>\n                  );\n                })}\n              </NavDropdown>\n\n              <LinkContainer style={{ color: \"white\" }} to=\"/spaces\">\n                <Nav.Link>Spaces</Nav.Link>\n              </LinkContainer>\n              <LinkContainer style={{ color: \"white\" }} to=\"/chat\">\n                <Nav.Link>Chat</Nav.Link>\n              </LinkContainer>\n              <Nav.Link onClick={() => setLoggedOut(true)}>Logout</Nav.Link>\n              {loggedOut && <Redirect to=\"/\" />}\n            </>\n          ) : (\n            <>\n              <LinkContainer style={{ color: \"white\" }} to=\"/register\">\n                <Nav.Link>Sign Up</Nav.Link>\n              </LinkContainer>\n              <LinkContainer style={{ color: \"white\" }} to=\"/login\">\n                <Nav.Link>Login</Nav.Link>\n              </LinkContainer>\n            </>\n          )}\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n};\n\nexport default NavBar;\n","import React, { useEffect } from \"react\";\nimport { Image, Button } from \"react-bootstrap\";\nimport { Dropdown } from \"@gympass/yoga\";\nimport { colorPallet } from \"./Theme\";\n\n/**\n * Generated avatar. Props are values from useState\n * @param {string} seed   random string\n * @param {function} setSeed   sets seed\n * @param {string} sprite    type of avatar from api\n * @param {function} setSprite    set sprite\n */\nconst AvatarGen = ({ seed, setSeed, sprite, setSprite }) => {\n  /** Generates a random string */\n  const stringGenerator = () => {\n    const characters = \"abcdefghijklmnopqrstuvwxyz123456789\";\n    const max = characters.length - 1;\n    const min = 0;\n    let randomString = \"\";\n    for (let i = min; i < max; i += 1) {\n      randomString += characters[Math.ceil(Math.random() * (max - min) + min)];\n    }\n    return randomString;\n  };\n\n\n  return (\n    <div style={{ marginBottom: \"22px\" }}>\n      <Image\n        style={{ width: \"9rem\" }}\n        src={`https://avatars.dicebear.com/api/${sprite}/${seed}.svg`}\n        rounded\n      />\n      <Button onClick={() => setSeed(stringGenerator())}>\n        Generate Avatar\n      </Button>\n      <Dropdown\n        style={{ width: \"100%\", color: colorPallet.marvel }}\n        label=\"Choose an Avatar Type\"\n        options={[\n          { label: \"Feminine\", value: \"female\" },\n          { label: \"Masculine\", value: \"male\" },\n          { label: \"Random Human\", value: \"human\" },\n          { label: \"Robot\", value: \"bottts\" },\n          { label: \"Jdenticon\", value: \"jdenticon\" },\n        ]}\n        onChange={(choice) => setSprite(choice.value)}\n      />\n    </div>\n  );\n};\nexport default AvatarGen;\n","import React, { useState, useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { Alert, Form, Container, Card } from \"react-bootstrap\";\nimport { Input } from \"@gympass/yoga\";\nimport { colorPallet } from \"./Theme\";\nimport AvatarGen from \"./AvatarGen\";\n\nfunction Register() {\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [alert, setAlert] = useState(null);\n  const [redirect, setRedirect] = useState(null);\n  const [sprite, setSprite] = useState(\"female\");\n  const [seed, setSeed] = useState(\"safespace\");\n\n  async function registerUser() {\n    fetch(\"/user\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        avatar: [sprite, seed],\n        username: username,\n        email: email,\n        password: password,\n      }),\n    });\n  }\n\n  function warn(warningText) {\n    setAlert(warningText);\n    window.setTimeout(() => {\n      setAlert(null);\n    }, 5000);\n  }\n\n  /**\n   * Checks user's registration credentials and warns on invalid inputs\n   * @param {string} username - The user's chosen tagname\n   * @param {string} email - The user's email address\n   * @param {string} password - The user's password (to be hashed client-side and server-side)\n   */\n  const validateInputs = (username, email, password) => {\n    const usernameRegex = /\\W/i;\n    const emailRegex = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n    if (usernameRegex.test(username)) {\n      warn(\n        \"Oops, that username seems wrong. Try removing those special characters!\"\n      );\n      return false;\n    }\n    if (username.length > 30) {\n      warn(\"Oops, that username seems too long. Try making it shorter!\");\n      return false;\n    }\n    if (username.length < 6) {\n      warn(\"Oops, that username seems too short. Try making it longer!\");\n      return false;\n    }\n    if (emailRegex.test(email.toLowerCase()) === false) {\n      warn(\"Oops, that email seems wrong. Try typing it again!\");\n      return false;\n    }\n    if (password.length < 8) {\n      warn(\"Oops, that password seems wrong. Try making it longer!\");\n      return false;\n    }\n    return true;\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (validateInputs(username, email, password)) {\n      registerUser();\n      return setIsSubmitted(true);\n    }\n  };\n\n  useEffect(() => {\n    if (isSubmitted) {\n      setRedirect(<Redirect to=\"/login\" />);\n    }\n  }, [isSubmitted]);\n\n  return (\n    <div\n      style={{ display: \"flex\", justifyContent: \"center\", marginTop: \"10px\" }}\n    >\n      <Card style={{ width: \"25rem\", border: \"0px\" }}>\n        <Card.Body>\n          <Card.Title style={{ textAlign: \"center\" }}>\n            <h1>S A F E S P A C E</h1>\n          </Card.Title>\n          <Card.Title\n            style={{ textAlign: \"center\", color: colorPallet.darkMarvel }}\n          >\n            Create an account\n          </Card.Title>\n          <Card.Subtitle\n            style={{ textAlign: \"center\", color: colorPallet.lightMarvel }}\n            className=\"mb-2 \"\n          >\n            Feel free to use an alias\n          </Card.Subtitle>\n          <Container\n            style={{ marginTop: \"25px\" }}\n            className=\"justify-content-md-center\"\n            fluid=\"lg\"\n          >\n            {alert && <Alert variant=\"warning\">{alert}</Alert>}\n            <form onSubmit={handleSubmit} className=\"registerForm\">\n              <AvatarGen\n                sprite={sprite}\n                seed={seed}\n                setSprite={setSprite}\n                setSeed={setSeed}\n              />\n              <div>\n                <Form.Group>\n                  <Input\n                    style={{ width: \"100%\" }}\n                    type=\"text\"\n                    label=\"Username\"\n                    helper=\"Username must be longer than 6 characters\"\n                    value={username}\n                    onChange={(e) => setUsername(e.target.value)}\n                    onClean={(cleaned) => setUsername(cleaned)}\n                  />\n                </Form.Group>\n              </div>\n              <div>\n                <Form.Group controlId=\"formBasicEmail\">\n                  <Input\n                    style={{ width: \"100%\" }}\n                    type=\"email\"\n                    label=\"Email\"\n                    helper=\"Enter an email address\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                    onClean={(cleaned) => setEmail(cleaned)}\n                  />\n                </Form.Group>\n              </div>\n              <div>\n                <Form.Group controlId=\"formBasicPassword\">\n                  <Input\n                    style={{ width: \"100%\" }}\n                    type=\"password\"\n                    label=\"Password\"\n                    helper=\"Enter password longer than 8 characters\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                    onClean={(cleaned) => setPassword(cleaned)}\n                  />\n                </Form.Group>\n              </div>\n              <div style={{ textAlign: \"center\" }}>\n                <button type=\"submit\" className=\"btn btn-primary\">\n                  Create Account\n                </button>\n              </div>\n            </form>\n            {isSubmitted && <div>{redirect}</div>}\n          </Container>\n        </Card.Body>\n      </Card>\n    </div>\n  );\n}\n\nexport default Register;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { UserContext } from \"../contexts/userContext\";\nimport { Loader } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\n\nconst Home = () => {\n  const { user } = useContext(UserContext);\n  const [communities, setCommunities] = useState(null);\n\n  useEffect(() => {\n    const getCommunities = async () => {\n      if (user) {\n        const req = await fetch(`/communitiesByUser/${user.id}`);\n        const list = await req.json();\n        return list;\n      }\n    };\n    getCommunities().then((list) => {\n      setCommunities(list);\n    });\n  }, [user]);\n\n  return (\n    <div>\n      {communities != null && user != null ? (\n        communities.map((community, i) => {\n          return (\n            <Link key={i} to={`/news/${community.id}`}>\n              <h1>{community.name}</h1>\n            </Link>\n          );\n        })\n      ) : (\n        <div>\n          <Loader\n            style={{ display: \"flex\", alignItems: \"center\" }}\n            indeterminate\n            active\n          >\n            Loading Feed...\n          </Loader>\n        </div>\n      )}\n    </div>\n  );\n};\nexport default Home;\n","import React, {useEffect, useState} from \"react\";\nimport { Comment, Header } from \"semantic-ui-react\";\n/** Displays comments under a post */\nconst CommentList = ({ data }) => {\n  const comments = data;\n  console.log(comments)\n  const [complete, setComplete] = useState()\nuseEffect(()=>{\n  const getNames = async() =>{\n  for(let i = 0; i < comments.length; i++){\n    const response = await fetch(`/user/${comments[i].user_id}`)\n    const users = await response.json()\n    comments[i].username = users.username\n    comments[i].sprite = users.sprite\n    comments[i].seed = users.seed\n  }\n  setComplete(true)\n}\ngetNames()\n})\nconsole.log(comments)\n  return (\n    <Comment.Group>\n      <Header as=\"h3\" dividing>\n        Comments\n      </Header>\n      {complete && comments.map((res)=> {\n        console.log(res)\n        return (\n          <Comment>\n            <Comment.Avatar src={`https://avatars.dicebear.com/api/${res.sprite}/${res.seed}.svg`} />\n            <Comment.Content>\n              <Comment.Author as=\"a\">{res.username}</Comment.Author>\n              <Comment.Metadata>\n                <div>{res.created_at}</div>\n              </Comment.Metadata>\n              <Comment.Text>{res.content}</Comment.Text>\n            </Comment.Content>\n          </Comment>\n        );\n      })}\n    </Comment.Group>\n  );\n};\nexport default CommentList;\n","import React, { useState, useEffect } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Alert from \"react-bootstrap/Alert\";\nimport Button from \"react-bootstrap/Button\";\nimport { Input, TextArea } from \"@gympass/yoga\";\n\nfunction WritePostForm(props) {\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const [alert, setAlert] = useState(null);\n  const [update, setUpdate] = useState(false);\n  const communityId = props.id;\n  const postId = props.postId;\n  useEffect(() => {\n    const isAnUpdate = () => {\n      setUpdate(props.update);\n\n      if (update) {\n        setTitle(props.title);\n        setBody(props.body);\n      }\n    };\n\n    isAnUpdate();\n  }, [update]);\n\n  function handleTitleChange(e) {\n    const currentTitle = e.target.value;\n    // as long as 2 commit messages\n    if (title.length === 72 * 2) return;\n    setTitle(currentTitle);\n  }\n\n  function handleBodyChange(e) {\n    const currentBody = e.target.value;\n    setBody(currentBody);\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    let newPostInit;\n    if (update) {\n      newPostInit = {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ title, body, postId }),\n      };\n    } else {\n      newPostInit = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ title, body, communityId }),\n      };\n    }\n\n    const res = await fetch(\"/posts\", newPostInit);\n    if (res.status === 401) {\n      return warn(\"Connection Error. Please try again later!\");\n    }\n    if (res.status === 500) {\n      return warn(\n        \"Our computers are feeling down, please try again in a few moments.\"\n      );\n    }\n    if (res.status === 201) {\n      props.setShow(false);\n    }\n  }\n\n  function warn(warningText) {\n    setAlert(warningText);\n    window.setTimeout(() => {\n      setAlert(null);\n    }, 5000);\n  }\n\n  return (\n    <>\n      <h3>Submit a post</h3>\n      {alert && <Alert variant=\"warning\">{alert}</Alert>}\n      <Form>\n        <Input\n          label=\"Title\"\n          helper=\"Give your post a title\"\n          maxLength={72 * 2}\n          value={title}\n          onChange={handleTitleChange}\n          onClean={() => setTitle(\"\")}\n        />\n        <br />\n        <TextArea\n          label=\"Post Body\"\n          helper=\"Share your thoughts! Remember to be considerate of yourself and others\"\n          value={body}\n          onChange={handleBodyChange}\n        />\n        <br />\n        <Button onClick={handleSubmit}>Submit</Button>\n      </Form>\n    </>\n  );\n}\n\nexport default WritePostForm;\n","import React, { useState, createRef } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { Button, Dropdown } from \"semantic-ui-react\";\nimport { colorPallet } from \"./Theme\";\nimport WritePostForm from \"./WritePostForm\";\nimport { Navbar } from \"react-bootstrap\";\n\nfunction Update(props) {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => {\n    setShow(true);\n  };\n  const contextRef = createRef();\n\n  return (\n    <div>\n      <Dropdown.Item text=\"Edit\" onClick={handleShow} />\n      <Modal show={show} onHide={handleClose} animation={false}>\n        <Modal.Header closeButton>New Post</Modal.Header>\n        <Modal.Body>\n          <WritePostForm\n            setShow={setShow}\n            setNewPost={props.setNewPost}\n            postId={props.id}\n            update\n            title={props.title}\n            body={props.body}\n          />\n        </Modal.Body>\n      </Modal>\n    </div>\n  );\n}\n\nexport default Update;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { Item, Icon, Button, Dropdown, Form } from \"semantic-ui-react\";\nimport { Card, Nav } from \"react-bootstrap\";\nimport { UserContext } from \"../contexts/userContext\";\nimport CommentList from \"./CommentList\";\nimport ReadMoreReact from \"read-more-react\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport WritePostForm from \"./WritePostForm\";\nimport Update from \"./Update\";\n\nfunction Post(props) {\n  const [newPost, setNewPost] = useState(false);\n  const { user } = useContext(UserContext);\n  const [likes, setLikes] = useState([]);\n  const [comments, setComments] = useState(null);\n  const [isCommentsShowing, setIsCommentsShowing] = useState(false);\n  const [isLiked, setIsLiked] = useState(false);\n  const dateCreated = new Date(props.data.created_at);\n  const [userComment, setUserComment] = useState();\n  const months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n  const [show, setShow] = useState(false);\n  useEffect(() => {\n    const getLikes = async () => {\n      const req = await fetch(`/likes/${props.data.id}`);\n      const res = await req.json();\n      setLikes(res);\n      for (let i = 0; i < likes.length; i++) {\n        if (likes[i].user_id === user.id) {\n          return setIsLiked(true);\n        }\n      }\n    };\n\n    getLikes();\n  }, [isLiked]);\n\n  const [userResponse, setUserResponse] = useState(null);\n\n  const getUser = async () => {\n    const req = await fetch(`/user/${props.data.user_id}`);\n    const userResponse = await req.json();\n    setUserResponse(userResponse);\n  };\n\n  useEffect(() => {\n    getUser();\n  }, []);\n\n  const like = async () => {\n    const postLike = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    if (isLiked === true) {\n      const req = await fetch(`/unlike/${props.data.id}/${user.id}`, postLike);\n      const res = await req.json();\n      setLikes(res);\n      setIsLiked(false);\n    } else {\n      const req = await fetch(`/like/${props.data.id}/${user.id}`, postLike);\n      const res = await req.json();\n      setLikes(res);\n      setIsLiked(true);\n    }\n  };\n\n  const getComments = async () => {\n    if (isCommentsShowing) {\n      setIsCommentsShowing(false);\n    } else {\n      const req = await fetch(`/comments/${props.data.id}`);\n      const comments = await req.json();\n      setComments(comments);\n      setIsCommentsShowing(true);\n    }\n  };\n\n  const deletePost = (id) => {\n    fetch(`/posts/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n  };\n\n  function handleCommentChange(e) {\n    const currentComment = e.target.value;\n    setUserComment(currentComment);\n  }\n\n  const createComment = async () => {\n    console.log('hello')\n    const postId = props.data.id;\n    const content = userComment;\n    const postComment = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ postId, content }),\n    };\n    const req = await fetch(\"/comments\", postComment);\n    const res = await req;\n  };\n  return (\n    <Item\n      style={{\n        width: \"80%\",\n        marginLeft: \"10%\",\n        marginTop: \"30px\",\n        border: \"2px solid black\",\n        padding: \"15px\",\n        boxShadow: \"2px 5px #888888\",\n      }}\n    >\n      <Item.Image src=\"https://react.semantic-ui.com/images/wireframe/image.png\" />\n      <Item.Content>\n        <Item.Header as=\"a\">{props.data.title}</Item.Header>\n        {userResponse ? (\n          <LinkContainer to={`/user/${userResponse.id}`}>\n            <Nav.Link>{userResponse.username}</Nav.Link>\n          </LinkContainer>\n        ) : (\n          \"\"\n        )}\n        {props.data.user_id === user.id && (\n          <Button floated=\"right\">\n            <Dropdown floated=\"right\" icon=\"edit\">\n              <Dropdown.Menu>\n                <Dropdown.Item\n                  text=\"Delete\"\n                  onClick={() => deletePost(props.data.id)}\n                />\n                <Dropdown.Item text=\"Edit\">\n                  <Update\n                    setNewPost={setNewPost}\n                    id={props.data.id}\n                    title={props.data.title}\n                    body={props.data.content}\n                  />\n                </Dropdown.Item>\n              </Dropdown.Menu>\n            </Dropdown>\n          </Button>\n        )}\n\n        <Item.Meta>\n          {months[dateCreated.getMonth()]} {dateCreated.getDate()},{\" \"}\n          {dateCreated.getFullYear()} {dateCreated.getHours()}:\n          {dateCreated.getMinutes()}{\" \"}\n          {dateCreated.getHours() >= 12 ? \"PM\" : \"AM\"}\n        </Item.Meta>\n        <Item.Description>\n          <ReadMoreReact\n            text={props.data.content}\n            min={200}\n            max={500}\n            ideal={300}\n            readMoreText=\"...See More\"\n          />\n        </Item.Description>\n        <Item.Extra>\n          <Card.Link>{likes.length}</Card.Link>\n          <Card.Link onClick={() => like()}>\n            {isLiked ? \"Un-Like\" : \"Like\"}\n          </Card.Link>\n          <Card.Link onClick={() => getComments()}>Comments</Card.Link>\n        </Item.Extra>\n\n        {isCommentsShowing && <CommentList data={comments} />}\n\n        <Form>\n          <Form.TextArea width={12} onChange={handleCommentChange} />\n          <Form.Button\n            content=\"Add Reply\"\n            labelPosition=\"right\"\n            icon=\"edit\"\n            primary\n            onClick={() => createComment()}\n          />\n        </Form>\n      </Item.Content>\n    </Item>\n  );\n}\n\nexport default Post;\n","import React, { useState, createRef } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { Button } from \"semantic-ui-react\";\nimport { colorPallet } from \"./Theme\";\nimport WritePostForm from \"./WritePostForm\";\nimport { Navbar } from \"react-bootstrap\";\n\nfunction NewPostModal(props) {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const contextRef = createRef();\n\n  return (\n    <div>\n      <Navbar fixed=\"bottom\">\n        <Button\n          label=\"Write Post\"\n          labelPosition=\"left\"\n          size=\"massive\"\n          color=\"black\"\n          style={{ backgroundColor: colorPallet.marvel }}\n          circular\n          icon=\"edit\"\n          onClick={handleShow}\n        />\n\n        <Modal show={show} onHide={handleClose} animation={false}>\n          <Modal.Header closeButton>New Post</Modal.Header>\n          <Modal.Body>\n            <WritePostForm\n              setShow={setShow}\n              setNewPost={props.setNewPost}\n              id={props.id}\n            />\n          </Modal.Body>\n        </Modal>\n      </Navbar>\n    </div>\n  );\n}\n\nexport default NewPostModal;\n","import React, { useState, useEffect } from \"react\";\nimport Post from \"./Post\";\nimport NewPostModal from \"./NewPostModal\";\nimport { useParams } from \"react-router-dom\";\nimport { Loader, Item } from \"semantic-ui-react\";\n\nfunction NewsFeed() {\n  const [response, setResponse] = useState(null);\n  const [newPost, setNewPost] = useState(false);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const getPost = async () => {\n      const req = await fetch(`/posts-community/${id}`);\n      const response = await req.json();\n      setResponse(response);\n    };\n    getPost();\n  }, [id]);\n\n  return response === null ? (\n    <div>\n      <Loader\n        style={{ display: \"flex\", alignItems: \"center\" }}\n        indeterminate\n        active\n      >\n        Loading Feed...\n      </Loader>\n    </div>\n  ) : (\n    <>\n      <NewPostModal setNewPost={setNewPost} />\n      <Item.Group>\n        {response.map((res, i) => (\n          <Post key={res.title + i} data={res} />\n        ))}\n      </Item.Group>\n    </>\n  );\n}\n\nexport default NewsFeed;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { Card, Spinner, Button, Jumbotron } from \"react-bootstrap\";\nimport { UserContext } from \"../contexts/userContext\";\nimport { Redirect } from \"react-router-dom\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\n/** Wraps list of communities */\nfunction Communities() {\n  const [response, setResponse] = useState([]);\n  const [community, setCommunity] = useState();\n  const [joined, setJoined] = useState(false);\n  const [visited, setVisit] = useState(false);\n  const { user } = useContext(UserContext);\n  useEffect(() => {\n    fetch(\"/communities\")\n      .then((res) => {\n        if (res.status === 200) return res.json();\n        return [];\n      })\n      .then((json) => checkCommunities(user.id, json))\n      .then((json) => setResponse(json));\n  }, [setResponse]);\n\n  const checkCommunities = async (id, json) => {\n    const req = await fetch(`/communitiesByUser/${id}`);\n    const res = await req.json();\n    for (let i = 0; i < res.length; i++) {\n      for (let t = 0; t < json.length; t++) {\n        if (res[i].id === json[t].id) {\n          json.splice(t, 1);\n        }\n      }\n    }\n    return json;\n  };\n\n  async function join(userId, communityId) {\n    setCommunity(communityId);\n    const newPostInit = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ userId, communityId }),\n    };\n    const res = await fetch(\"/join\", newPostInit);\n    if (res.status === 500) {\n      console.log(\n        \"Our computers are feeling down, please try again in a few moments.\"\n      );\n    }\n    if (res.status === 200) {\n      return setJoined(true);\n    }\n  }\n\n  async function visit(communityId) {\n    setCommunity(communityId);\n    return setVisit(true);\n  }\n\n  return response.length === 0 ? (\n    <Spinner animation=\"border\" role=\"status\">\n      <span className=\"sr-only\">Loading...</span>\n    </Spinner>\n  ) : (\n    <div\n      style={{ display: \"flex\", justifyContent: \"center\", marginTop: \"25px\" }}\n    >\n      {visited && <Redirect to={`/news/visiter/${community}`} />}\n      {joined && <Redirect to={`/news/member/${community}`} />}\n      <div style={{ textAlign: \"center\" }}>\n\n        <h1 style={{marginBottom:\"20px\"}} >Safe Spaces To Join!</h1>\n        <LinkContainer style={{marginBottom:\"20px\"}} to='create-community'>\n          <Button>Create a Community</Button>\n        </LinkContainer>\n\n        <div style={{marginLeft:'20vw',marginRight:'20vw'}}>\n          {response.map((res, index) => (\n            <Card style={{ marginBottom: \"35px\" }} key={index}>\n              <Card.Body>\n                <Card.Title>{res.display_name}</Card.Title>\n                <Card.Text>{res.headline}</Card.Text>\n              </Card.Body>\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"space-around\",\n                  marginBottom: \"8px\",\n                }}\n              >\n                <Button\n                  style={{ width: \"22%\" }}\n                  onClick={() => join(user.id, res.id)}\n                >\n                  Join\n                </Button>\n                <Button\n                  style={{ width: \"22%\" }}\n                  onClick={() => visit(res.id)}\n                  variant=\"secondary\"\n                >\n                  Visit\n                </Button>\n              </div>\n            </Card>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Communities;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { UserContext } from \"../contexts/userContext\";\nimport { Redirect, useLocation } from \"react-router-dom\";\nimport {\n  Button,\n  Card,\n  Image,\n  Comment,\n  Header,\n  Form,\n  Item,\n  Dropdown,\n  Icon,\n  Label\n} from \"semantic-ui-react\";\nimport ReadMoreReact from \"read-more-react\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Nav } from \"react-bootstrap\";\nimport CommentList from \"./CommentList\";\nimport Update from \"./Update\";\n\nconst Post = ({ data }) => {\n  // data: community_id, content, created_at, id, likes, title, user_id\n  const location = useLocation();\n  const { title } = data;\n  const dateCreated = new Date(data.created_at);\n  const postId = data.id;\n  const postAuthorId = data.user_id;\n  const communityId = data.community_id;\n\n  const { user } = useContext(UserContext);\n  const [newPost, setNewPost] = useState(false);\n  const [likes, setLikes] = useState([]); // number of likes\n  const [comments, setComments] = useState(null);\n  const [isCommentsShowing, setIsCommentsShowing] = useState(false);\n  const [isLiked, setIsLiked] = useState(false); // current user clicked 'like'\n  const [isChanged, setIsChanged] = useState(false);\n  const [show, setShow] = useState(false);\n\n  useEffect(() => {\n    const getLikes = async () => {\n      const req = await fetch(`/likes/${postId}`);\n      const postLikes = await req.json();\n      setLikes(postLikes);\n      for (let i = 0; i < likes.length; i++) {\n        if (likes[i].user_id === postAuthorId) return setIsLiked(true);\n      }\n    };\n    getLikes();\n  }, [isLiked]);\n\n  const [author, setAuthor] = useState(null); // all author's info\n\n  useEffect(() => {\n    const getAuthor = async () => {\n      const req = await fetch(`/user/${postAuthorId}`);\n      const newAuthor = await req.json();\n      setAuthor(newAuthor);\n    };\n    getAuthor();\n  }, []);\n\n  const getComments = async () => {\n    if (isCommentsShowing) {\n      setIsCommentsShowing(false);\n    } else {\n      const req = await fetch(`/comments/${postId}`);\n      const comments = await req.json();\n      setComments(comments);\n      setIsCommentsShowing(true);\n    }\n  };\n\n  const likePost = async () => {\n    const likeInit = {\n      method: \"POST\",\n    };\n\n    if (isLiked) {\n      const req = await fetch(`/unlike/${postId}/${postAuthorId}`, likeInit);\n      const newLikes = await req.json();\n      setLikes(newLikes);\n      setIsLiked(false);\n    } else {\n      const req = await fetch(`/like/${postId}/${postAuthorId}`, likeInit);\n      const newLikes = await req.json();\n      setLikes(newLikes);\n      setIsLiked(true);\n    }\n  };\n\n  const showComments = () => {\n    if (isCommentsShowing) {\n      setIsCommentsShowing(false);\n    } else {\n      setIsCommentsShowing(true);\n    }\n  };\n\n  const deletePost = async (postId) =>\n    fetch(`/posts/${postId}`, { method: \"DELETE\" });\n\n  const [userComment, setUserComment] = useState(\"\");\n\n  const createComment = async () => {\n    const commentInit = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ postId, content: userComment }),\n    };\n    await fetch(\"/comments\", commentInit);\n    setIsChanged((p) => !p);\n  };\n\n  const handleCommentChange = (e) => {\n    const currentComment = e.target.value;\n    setUserComment(currentComment);\n  };\n\n  const { sprite, seed, username } = author || {\n    sprite: \"jdenticon\",\n    seed: \"2f\",\n    username: \"User\",\n  };\n  const avatar = `https://avatars.dicebear.com/api/${sprite}/${seed}.svg`;\n\n  const [userResponse, setUserResponse] = useState(null);\n\n  const getUser = async () => {\n    const req = await fetch(`/user/${data.user_id}`);\n    const userResponse = await req.json();\n    setUserResponse(userResponse);\n  };\n\n  useEffect(() => {\n    getUser();\n  }, []);\n\n  return (\n    <Card fluid>\n      {isChanged && <Redirect to={location.pathname} />}\n      <Card.Content>\n        {data.user_id === user?.id && (\n          <Button floated=\"right\">\n            <Dropdown floated=\"right\" icon=\"edit\">\n              <Dropdown.Menu>\n                <Dropdown.Item\n                  text=\"Delete\"\n                  onClick={() => deletePost(data.id)}\n                />\n                <Dropdown.Item text=\"Edit\">\n                  <Update\n                    setNewPost={setNewPost}\n                    id={data.id}\n                    title={data.title}\n                    body={data.content}\n                  />\n                </Dropdown.Item>\n              </Dropdown.Menu>\n            </Dropdown>\n          </Button>\n        )}\n        <Image floated=\"right\" size=\"mini\" src={avatar} />\n        <Card.Header>{title}</Card.Header>\n        <Card.Meta>\n          {userResponse ? (\n            <LinkContainer to={`/user/${userResponse.id}`}>\n              <Nav.Link>By {userResponse.username}</Nav.Link>\n            </LinkContainer>\n          ) : (\n            \"\"\n          )}\n        </Card.Meta>\n        <Card.Meta>{dateCreated.toLocaleString()}</Card.Meta>\n        <Card.Description>\n          <ReadMoreReact\n            text={data.content}\n            min={200}\n            max={500}\n            ideal={350}\n            readMoreText=\"Read More\"\n          />\n        </Card.Description>\n      </Card.Content>\n\n      <Card.Content\n        extra\n        style={{ display: \"flex\", justifyContents: \"space-between\" }}\n      >\n        <Card.Description style={{ marginRight: \"4px\" }}>\n           <Button as='div' labelPosition='left'>\n              <Label as='a' basic pointing='right'>\n                {likes.length}\n              </Label>\n              <Button style={isLiked ? {color:\"#1FB6FF\"} : {color:\"white\"}} onClick={() => likePost()} color=\"black\" icon>\n                <Icon name='heart' />\n                {isLiked ? \"Liked\" : \"Like\"}\n              </Button>\n            </Button>\n\n        </Card.Description>\n        <Card.Description>\n\n        </Card.Description>\n        <Card.Description onClick={() => getComments()}>\n          <Button color=\"black\" animated>\n            <Button.Content style={{color:'white'}} visible>Comments</Button.Content>\n            <Button.Content hidden>\n              <Icon name='arrow right' />\n            </Button.Content>\n          </Button>\n        </Card.Description>\n      </Card.Content>\n\n      <Card.Content extra>\n        <Comment.Group>\n          {isCommentsShowing && <CommentList data={comments} />}\n          <Form reply>\n            <Form.TextArea width={12} onChange={handleCommentChange} />\n            <Button\n              onClick={() => createComment()}\n              content=\"Add Reply\"\n              labelPosition=\"left\"\n              icon=\"edit\"\n              secondary\n            />\n          </Form>\n        </Comment.Group>\n      </Card.Content>\n    </Card>\n  );\n};\n\nexport default Post;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport Post from \"./NewPost\";\nimport { UserContext } from \"../contexts/userContext\";\nimport { Item, Card, Loader } from \"semantic-ui-react\";\nimport { Jumbotron, Button } from \"react-bootstrap\";\n\n/**\n * Account Page: Shows all posts for logged in user\n */\nfunction Account() {\n  const [posts, setPosts] = useState([]);\n  const { user } = useContext(UserContext);\n  const [userResponse, setUserResponse] = useState(null);\n\n  const getUser = async () => {\n    const req = await fetch(`/user/${user.id}`);\n    const userResponse = await req.json();\n    setUserResponse(userResponse);\n  };\n\n  useEffect(() => {\n    getUser();\n  }, []);\n\n  useEffect(() => {\n    const getPost = async () => {\n      const res = await fetch(`/posts-user/${user.id}`);\n      const rawPosts = await res.json();\n      return setPosts(rawPosts);\n    };\n    getPost();\n  }, [user]);\n\n  return (\n    <>\n      {user ? (\n        <div>\n          <Jumbotron>\n            <h1>{user.username}</h1>\n          </Jumbotron>\n          <div style={{ width: \"65%\", margin: \"0 auto\" }}>\n            <Card.Group>\n              {posts.map((res, i) => (\n                <Post key={res.title + i} data={res} />\n              ))}\n            </Card.Group>\n          </div>\n        </div>\n      ) : (\n        <div>\n          <Loader\n            style={{ display: \"flex\", alignItems: \"center\" }}\n            indeterminate\n            active\n          >\n            Loading Feed...\n          </Loader>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default Account;\n","import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Item } from \"semantic-ui-react\";\n\nfunction Edit() {\n  const [response, setResponse] = useState([]);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const getPost = async () => {\n      const req = await fetch(`/posts/${id}`);\n      const data = await req.json();\n      return setResponse(data);\n    };\n    getPost();\n  }, [id]);\n\n  const deletePost = () => {\n    fetch(`/posts/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n  };\n\n  // const switchToForm(){\n  //   return (\n\n  //     )\n  // }\n\n  // const editPost = () => {\n  //   fetch(`/posts/${id}`, {\n  //     method: 'DELETE',\n  //     headers: {\n  //       'Content-Type': 'application/json'\n  //     },\n  //     // body: JSON.stringify({\n  //     //   avatar: [sprite, seed],\n  //     //   username: username,\n  //     //   email: email,\n  //     //   password: password\n  //     // })\n  //   })\n  // }\n\n  return (\n    <Item\n      style={{\n        width: \"80%\",\n        marginLeft: \"10%\",\n        marginTop: \"30px\",\n        border: \"2px solid black\",\n        padding: \"15px\",\n        boxShadow: \"2px 5px #888888\",\n      }}\n    >\n      <Item.Image src=\"https://react.semantic-ui.com/images/wireframe/image.png\" />\n      <Item.Content>\n        <Item.Header as=\"a\">Title will go here</Item.Header>\n        <Item.Description>Description</Item.Description>\n        <Item.Extra>\n          <button type=\"button\" class=\"btn btn-primary\" onClick={deletePost}>\n            Delete\n          </button>\n        </Item.Extra>\n      </Item.Content>\n    </Item>\n  );\n}\n\nexport default Edit;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport Post from \"./NewPost\";\nimport { useParams } from \"react-router-dom\";\nimport { Item } from \"semantic-ui-react\";\nimport { Jumbotron } from \"react-bootstrap\";\n\nfunction OtherUser() {\n  const { id } = useParams();\n  const [user, setUser] = useState(\"\");\n  const [posts, setPosts] = useState([]);\n\n  const getUser = async () => {\n    const req = await fetch(`/user/${id}`);\n    const data = await req.json();\n    setUser(data);\n  };\n\n  const getPosts = async () => {\n    const req = await fetch(`/posts-user/${id}`);\n    const data = await req.json();\n    setPosts(data);\n  };\n\n  useEffect(() => {\n    getUser();\n    getPosts();\n  }, []);\n\n  return (\n    <div>\n      <Jumbotron>\n        <h1>{user.username}</h1>\n      </Jumbotron>\n      <div style={{ width: \"65%\", margin: \"0 auto\" }}>\n        <Item.Group>\n          {posts.map((res, i) => (\n            <Post key={i} data={res} />\n          ))}\n        </Item.Group>\n      </div>\n    </div>\n  );\n}\n\nexport default OtherUser;\n","import React, { useState, useEffect } from \"react\";\nimport NewPostModal from \"./NewPostModal\";\nimport { Jumbotron, Tabs, Tab } from \"react-bootstrap\";\nimport Post from \"./NewPost\";\nimport { useParams } from \"react-router-dom\";\nimport { Item, Card, Message, Feed } from \"semantic-ui-react\";\n\nconst Community = () => {\n  const [posts, setPosts] = useState([]);\n  const [community, setCommunity] = useState({});\n  const [moderators, setModerators] = useState([]);\n  const [newPost, setNewPost] = useState(false);\n  const { type, id } = useParams();\n\n  useEffect(() => {\n    const getPosts = async () => {\n      if (type === \"member\") {\n        const req = await fetch(`/posts-community/${id}`);\n        const response = await req.json();\n        console.log(response, \"member\");\n        setPosts(response);\n      } else {\n        const req = await fetch(`/posts-community/visiter/${id}`);\n        const response = await req.json();\n        console.log(response, \"visiter\");\n        setPosts(response);\n      }\n    };\n\n    const getModerators = async () => {\n      const req = await fetch(`/moderators/${id}`);\n      const res = await req.json();\n      // console.log(res.map(obj => obj.username))\n      setModerators(res);\n    };\n\n    const getCommunity = async () => {\n      const req = await fetch(`/communities/${id}`);\n      const res = await req.json();\n      setCommunity(res);\n    };\n\n    getModerators();\n    getCommunity();\n    getPosts();\n  }, [id]);\n\n  return (\n    <div>\n      <Jumbotron>\n        <Feed.Event>\n          <Feed.Label style={{width:\"50px\"}} image={`https://avatars.dicebear.com/api/${community.sprite}/${community.seed}.svg`} />\n        </Feed.Event>\n        <h1>{community.display_name}</h1>\n        <p>{community.headline}</p>\n      </Jumbotron>\n      <Tabs\n        defaultActiveKey=\"newsfeed\"\n        transition={false}\n        id=\"noanim-tab-example\"\n      >\n        <Tab eventKey=\"newsfeed\" title=\"Newsfeed\">\n          <br />\n          <div style={{ width: \"65%\", margin: \"0 auto\" }}>\n            <Card.Group>\n              <NewPostModal setNewPost={setNewPost} id={id} />\n              {Array.isArray(posts) &&\n                posts.map((res, i) => <Post key={i} data={res} />)}\n            </Card.Group>\n          </div>\n        </Tab>\n        <Tab eventKey=\"about\" title=\"About\">\n          <Message style={{marginTop:\"20px\"}}>\n            <Message.Header>About Us</Message.Header>\n            <p>{community.description}</p>\n          </Message>\n        </Tab>\n        <Tab eventKey=\"admins\" title=\"Admins\">\n            <Message style={{marginTop:\"20px\"}}>\n              <Message.Header>Adminstrators of this group:</Message.Header>\n                <Message.List>\n                  {moderators.map((moderator, i) => (\n                    <Message.Item key={i}>\n                      <Feed.Event>\n                        <Feed.Label style={{width:\"50px\"}} image={`https://avatars.dicebear.com/api/${moderator.sprite}/${moderator.seed}.svg`} />\n                        <Feed.Content>\n                          <Feed.Summary\n                            content={moderator.username}\n                          />\n                        </Feed.Content>\n                      </Feed.Event>\n\n                    </Message.Item>\n                  ))}\n                </Message.List>\n            </Message>\n\n        </Tab>\n      </Tabs>\n    </div>\n  );\n};\n\nexport default Community;\n","import React from \"react\";\nimport { Comment } from \"semantic-ui-react\";\n\nconst Message = (props) => {\n  return (\n    <Comment>\n      <Comment.Avatar\n        as=\"a\"\n        src={`https://avatars.dicebear.com/api/${props.sprite}/${props.seed}.svg`}\n      />\n      <Comment.Content>\n        <Comment.Author>{props.author}</Comment.Author>\n        <Comment.Metadata>\n          <div>{props.sentAt}</div>\n          {props.isPrivate && (\n            <div\n              style={{ color: \"red\" }}\n            >{`${props.author} private messaged you`}</div>\n          )}\n        </Comment.Metadata>\n        <Comment.Text>\n          <p>{props.message}</p>\n        </Comment.Text>\n      </Comment.Content>\n    </Comment>\n  );\n};\n\nexport default Message;\n","import React, { useState, useEffect, useContext, useRef } from \"react\";\nimport {\n  TextArea,\n  Button,\n  Container,\n  Comment,\n  Header,\n  Icon,\n  Image,\n  Radio,\n  Label,\n  Menu,\n  Tab,\n} from \"semantic-ui-react\";\nimport {\n  Navbar,\n  Modal,\n  Overlay,\n  Tooltip,\n  OverlayTrigger,\n} from \"react-bootstrap\";\nimport Message from \"./Message\";\nimport { colorPallet } from \"./Theme\";\nimport { UserContext } from \"../contexts/userContext\";\nimport io from \"socket.io-client\";\n\nconst Chat = () => {\n  const { user } = useContext(UserContext);\n  const [message, setMessage] = useState(\"\");\n  const [yourId, setYourId] = useState();\n  const [chatLog, setChatLog] = useState([]);\n  const [contact, setContact] = useState({});\n  const [onlineUsers, setOnlineUsers] = useState([]);\n  const [modalShow, setModalShow] = useState(false);\n  const [isOnline, setIsOnline] = useState(false);\n  const [newMessage, setNewMessage] = useState(0);\n\n  const socketRef = useRef();\n\n  // Upon recieving messages, this functions updates its chatlog with the most recent chats\n  const receivedMessage = (message) => {\n    setChatLog((oldMsgs) => [...oldMsgs, message]);\n    setNewMessage((msgCount) => msgCount + 1);\n  };\n\n  // Gets the current time in MM/DD/YYYY HH:MM AM/PM format\n  const getTime = () => {\n    const now = new Date();\n    const months = [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\",\n    ];\n    const month = months[now.getMonth()];\n    const day = now.getDate();\n    const year = now.getFullYear();\n    const time = `${now.getHours()}:${now.getMinutes()}`;\n    const AM_PM = now.getHours() >= 12 ? \"PM\" : \"AM\";\n    return `${month} ${day}, ${year} - ${time} ${AM_PM}`;\n  };\n\n  // Send a message package to the server to be sent to a specified recipient\n  const sendMessage = () => {\n    const messageObject = {\n      body: message,\n      id: yourId,\n      username: user.username,\n      seed: user.seed,\n      sprite: user.sprite,\n      sentAt: getTime(),\n      socketId: contact.socketId\n    }\n    socketRef.current.emit('send message', messageObject)\n  }\n  // Sets the message state as the input is populated\n  const handleChange = (e) => {\n    setMessage(e.target.value);\n  };\n\n  // Set contact to be the user that is clicked\n  const chooseContact = (peer) => {\n    setContact(peer);\n  };\n\n  // Signals to the server that the user is online and passes information about its identity\n  const goOnline = (id) => {\n    const userRef = {\n      socketId: id,\n      userId: user.id,\n      username: user.username,\n      seed: user.seed,\n      sprite: user.sprite,\n    };\n    socketRef.current.emit(\"online\", userRef);\n    setIsOnline(true);\n  };\n\n  // Signals to the server that the user is offline\n  const goOffline = () => {\n    socketRef.current.emit(\"go offline\");\n    setIsOnline(false);\n  };\n\n  // This listens for socket.io events and executes callbacks in response\n  useEffect(() => {\n    socketRef.current = io.connect(\"/\");\n    socketRef.current.on(\"your id\", (id) => setYourId(id));\n    socketRef.current.on(\"message\", (message) => receivedMessage(message));\n    socketRef.current.on(\"update\", (users) => setOnlineUsers(users));\n  }, []);\n\n  // This ensures that the chat always shows the most recent message\n  useEffect(() => {\n    if (document.getElementById(\"chatBox\")) {\n      const chatBox = document.getElementById(\"chatBox\");\n      chatBox.scrollTop = chatBox.scrollHeight;\n    }\n  });\n\n  const panes = [\n    {\n      menuItem: { key: \"users\", icon: \"users\", content: \"Online Users\" },\n      render: () => {\n        return onlineUsers.map((user, index) => {\n          if (user.socketId !== yourId) {\n            return (\n              <Comment\n                style={{ marginLeft: \"25px\", marginTop: \"20px\" }}\n                key={index}\n                onClick={() => {\n                  chooseContact(user);\n                }}\n              >\n                <Comment.Avatar\n                  style={{ width: \"50px\", height: \"55px\" }}\n                  src={`https://avatars.dicebear.com/api/${user.sprite}/${user.seed}.svg`}\n                />\n                <Comment.Content>\n                  <Comment.Author as=\"a\">{user.username}</Comment.Author>\n                </Comment.Content>\n              </Comment>\n            );\n          }\n        });\n      },\n    },\n    {\n      menuItem: (\n        <Menu.Item onClick={() => setNewMessage(0)} key=\"messages\">\n          Messages<Label>{newMessage}</Label>\n        </Menu.Item>\n      ),\n      render: () => {\n        return (\n          <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n            <Comment.Group\n              size=\"large\"\n              id=\"chatBox\"\n              style={{\n                marginTop: \"25px\",\n                overflow: \"auto\",\n                height: \"400px\",\n                border: \"3px solid #a7abaf\",\n                width: \"100%\",\n                padding: \"25px\",\n              }}\n            >\n              {chatLog.map((message, index) => {\n                if (message.socketId === yourId) {\n                  return (\n                    <Message\n                      key={index}\n                      isPrivate={true}\n                      message={message.body}\n                      author={message.username}\n                      sentAt={message.sentAt}\n                      sprite={message.sprite}\n                      seed={message.seed}\n                      yourId={yourId}\n                      contact={contact}\n                    />\n                  );\n                }\n                return (\n                  <Message\n                    key={index}\n                    isPrivate={false}\n                    message={message.body}\n                    author={message.username}\n                    sentAt={message.sentAt}\n                    sprite={message.sprite}\n                    seed={message.seed}\n                    yourId={yourId}\n                    contact={contact}\n                  />\n                );\n              })}\n            </Comment.Group>\n          </div>\n        );\n      },\n    },\n  ];\n\n  return (\n    <div>\n      <Navbar expand=\"lg\">\n        <Container>\n          <Header as=\"h1\" style={{ color: colorPallet.lightMarvel }}>\n            <Icon name=\"fa-inbox\" style={{ color: colorPallet.darkMarvel }} />\n            <Header.Content>Safespace Chat</Header.Content>\n          </Header>\n        </Container>\n      </Navbar>\n      <Navbar expand=\"lg\">\n        <Container>\n          <OverlayTrigger\n            key=\"overlay\"\n            placement=\"right\"\n            overlay={\n              <Tooltip id={`tooltip-right`}>\n                Anyone can private message you when online.\n              </Tooltip>\n            }\n          >\n            <Radio\n              toggle\n              onChange={() => {\n                isOnline ? goOffline() : goOnline(yourId);\n              }}\n              label={isOnline ? \"Online\" : \"Offline\"}\n            />\n          </OverlayTrigger>{\" \"}\n          <div>\n            {contact.socketId && (\n              <Button\n                onClick={() => {\n                  setContact({});\n                }}\n                content=\"Leave private\"\n              />\n            )}\n            {contact.socketId && (\n              <Comment\n                style={{ marginLeft: \"25px\", marginTop: \"10px\" }}\n                key=\"contact\"\n              >\n                <Comment.Avatar\n                  style={{ width: \"50px\", height: \"55px\" }}\n                  src={`https://avatars.dicebear.com/api/${contact.sprite}/${contact.seed}.svg`}\n                />\n                <Comment.Content>\n                  Private Messaging:\n                  <Comment.Author as=\"a\">{` ${contact.username}`}</Comment.Author>\n                </Comment.Content>\n              </Comment>\n            )}\n          </div>\n        </Container>\n      </Navbar>\n      <Tab panes={panes} />\n      <Navbar\n        fixed=\"bottom\"\n        expand=\"lg\"\n        style={{\n          backgroundColor: colorPallet.darkMarvel,\n          display: \"flex\",\n          justifyContent: \"center\",\n        }}\n      >\n        <Container>\n          <div\n            style={{ display: \"flex\", justifyContent: \"center\", width: \"100%\" }}\n          >\n            <TextArea\n              value={message}\n              onChange={handleChange}\n              style={{ width: \"100%\", height: \"40px\", fontSize: \"22px\" }}\n            />\n            <Button\n              onClick={() => {\n                sendMessage();\n                setMessage(\"\");\n              }}\n              content=\"Send\"\n            />\n          </div>\n        </Container>\n      </Navbar>\n    </div>\n  );\n};\n\nexport default Chat;\n","import React, { useState, useContext } from \"react\";\nimport { UserContext } from \"../contexts/userContext\";\nimport { Redirect } from \"react-router-dom\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Alert from \"react-bootstrap/Alert\";\nimport Card from \"react-bootstrap/Card\";\nimport Container from \"react-bootstrap/Container\";\nimport { Input, TextArea } from \"@gympass/yoga\";\nimport AvatarPicker from \"./AvatarGen\";\n\nconst CreateCommunity = () => {\n  const { user } = useContext(UserContext);\n  const communityValues = {\n    communityName: \"\",\n    displayName: \"\",\n    headline: \"\",\n    description: \"\",\n    seed: \"safespace\",\n    sprite: \"jdenticon\",\n  };\n\n  const [values, setValues] = useState(communityValues);\n  const [errors, setErrors] = useState([]);\n  const [completed, setCompleted] = useState(false);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    const newCommunityValues = {\n      ...values,\n      [name]: value,\n    };\n    setValues(newCommunityValues);\n  };\n\n  // Irregulars\n  function setAvatarSeed(value) {\n    const newCommunityValues = {\n      ...values,\n      seed: value,\n    };\n    setValues(newCommunityValues);\n  }\n\n  function setAvatarType(value) {\n    const newCommunityValues = {\n      ...values,\n      sprite: value,\n    };\n    setValues(newCommunityValues);\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const errors = validateInputs(values);\n    if (errors.length) return warn(errors);\n\n    const communityData = { ...values };\n    const commRes = await fetch(\"/communities\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(communityData),\n    });\n    const newCommId = await commRes.json();\n    setCompleted(true);\n  };\n\n  function validateInputs({ communityName, displayName, headline }) {\n    const errors = [];\n    if (!communityName) {\n      errors.push(\"Choosing a name is mandatory!\");\n    }\n\n    if (!displayName) {\n      errors.push(\"Please choose a name to represent your comunity\");\n    }\n\n    // Community name: 32 characters. Alphanumeric and underscore\n    if (/\\W/gi.test(communityName)) {\n      errors.push(\n        \"Community name must only contain letters, numbers, and underscores!\"\n      );\n    }\n    // Display name: 32 characters\n    if (displayName.length > 32) {\n      errors.push(\"The display name is limited to 32 characters or less!\");\n    }\n    return errors;\n  }\n\n  function warn(errorsArr) {\n    setErrors(errorsArr);\n    setTimeout(() => {\n      setErrors([]);\n    }, 4000);\n  }\n\n  const {\n    communityName,\n    displayName,\n    headline,\n    description,\n    sprite,\n    seed,\n  } = values;\n\n  return (\n    <div style={{ display: \"flex\", justifyContent: \"center\", marginTop: \"10px\" }}>\n      <Card style={{ width: \"25rem\", border: \"0px\" }}>\n        <Card.Body>\n          <Card.Title style={{ textAlign: \"center\" }}>\n            <h1>Create a Community</h1>\n          </Card.Title>\n          <Container\n            style={{ marginTop: \"25px\" }}\n            className=\"justify-content-md-center\"\n            fluid=\"lg\"\n          >\n\n      <Form onSubmit={handleSubmit}>\n        <AvatarPicker\n          seed={seed}\n          sprite={sprite}\n          setSeed={setAvatarSeed}\n          setSprite={setAvatarType}\n        />\n        <div>\n          <Form.Group>\n            <Input\n              name=\"communityName\"\n              value={communityName}\n              onChange={handleChange}\n              type=\"text\"\n              label=\"Community Name\"\n              helper=\"This name is more like a 'username' and so must be unique\"\n            />\n          </Form.Group>\n        </div>\n        <div>\n          <Form.Group>\n            <Input\n              name=\"displayName\"\n              value={displayName}\n              onChange={handleChange}\n              type=\"text\"\n              label=\"Display Name\"\n              helper=\"This is the name others will see\"\n            />\n          </Form.Group>\n        </div>\n        <div>\n          <Form.Group>\n            <Input\n              name=\"headline\"\n              value={headline}\n              onChange={handleChange}\n              type=\"text\"\n              label=\"Headline\"\n              helper=\"Briefly summarize your community to attract like-minded people\"\n            />\n          </Form.Group>\n        </div>\n        <div>\n          <Form.Group>\n        <TextArea\n          name=\"description\"\n          value={description}\n          onChange={handleChange}\n          label=\"Description\"\n          helper=\"Tell everyone what this community is about!\"\n        />\n      </Form.Group>\n    </div>\n        <>\n          <h3>Description Suggestions</h3>\n          <ul>\n            <li>What inspired you to create this community?</li>\n            <li>\n              What should I be looking for if I want to join this community?\n            </li>\n            <li>\n              What rules and guideslines should users follow when posting here?\n            </li>\n          </ul>\n        </>\n        {!!errors.length &&\n          errors.map((err) => (\n            <Alert variant=\"warning\" key={err}>\n              {err}\n            </Alert>\n          ))}\n        <Button type=\"submit\">Create Community</Button>\n      </Form>\n      {completed && <Redirect to=\"/\" />}\n    </Container>\n  </Card.Body>\n</Card>\n\n    </div>\n  );\n};\n\nexport default CreateCommunity;\n","import React from \"react\";\nimport { UserProvider } from \"./contexts/userContext\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Login from \"./components/Login\";\nimport Landing from \"./components/Landing\";\nimport NavBar from \"./components/Navbar\";\nimport Register from \"./components/Register\";\nimport Home from \"./components/Home\";\nimport NewsFeed from \"./components/NewsFeed\";\nimport Communities from \"./components/Communities\";\nimport Account from \"./components/Account\";\nimport Edit from \"./components/Edit\";\nimport OtherUser from \"./components/OtherUserAcc\";\nimport { ThemeProvider } from \"@gympass/yoga\";\nimport Community from \"./components/Community\";\nimport Chat from \"./components/Chat\";\nimport CreateCommunity from \"./components/CreateCommunity\";\n\nconst App = () => {\n  return (\n    <Router>\n      <ThemeProvider>\n        <UserProvider>\n          <div>\n            <NavBar />\n            <Switch>\n              <Route path=\"/register\">\n                <Register />\n              </Route>\n              <Route path=\"/login\">\n                <Login />\n              </Route>\n              <Route path=\"/news/:type/:id\">\n                <Community />\n              </Route>\n              <Route path=\"/spaces\">\n                <Communities />\n              </Route>\n              <Route path=\"/ex/:id\">\n                <NewsFeed />\n              </Route>\n              <Route path=\"/account\">\n                <Account />\n              </Route>\n              <Route path=\"/view/:id\">\n                <Edit />\n              </Route>\n              <Route path=\"/home\">\n                <Home />\n              </Route>\n              <Route path=\"/testCom/:id\">\n                <Community />\n              </Route>\n              <Route path=\"/user/:id\">\n                <OtherUser />\n              </Route>\n              <Route path=\"/chat\">\n                <Chat />\n              </Route>\n              <Route path=\"/create-community\">\n                <CreateCommunity />\n              </Route>\n              <Route path=\"/\">\n                <Landing />\n              </Route>\n            </Switch>\n          </div>\n        </UserProvider>\n      </ThemeProvider>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport App from \"./App\";\nconst root = document.getElementById(\"root\");\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  root\n);\n"],"sourceRoot":""}